[
  {
    "name": "Box2#clampPoint",
    "filePath": "src/Box2.js",
    "lines": [
      {
        "lineNumber": 267,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 268,
        "line": "\t * Clamps the given point to the boundaries of this box.\r"
      },
      {
        "lineNumber": 269,
        "line": "\t *\r"
      },
      {
        "lineNumber": 270,
        "line": "\t * @param {Vector2} p - A point.\r"
      },
      {
        "lineNumber": 271,
        "line": "\t * @param {Vector2} [target] - A target vector. If none is provided, a new one will be created.\r"
      },
      {
        "lineNumber": 272,
        "line": "\t * @return {Vector2} The clamped point.\r"
      },
      {
        "lineNumber": 273,
        "line": "\t */\r"
      },
      {
        "lineNumber": 274,
        "line": "\r"
      },
      {
        "lineNumber": 275,
        "line": "\tclampPoint(point, target = new Vector2()) {\r"
      }
    ],
    "codeParams": [
      "point",
      "target"
    ],
    "docParams": [
      "p",
      "target"
    ]
  },
  {
    "name": "Box2#equals",
    "filePath": "src/Box2.js",
    "lines": [
      {
        "lineNumber": 417,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 418,
        "line": "\t * Checks if this box equals the given one.\r"
      },
      {
        "lineNumber": 419,
        "line": "\t *\r"
      },
      {
        "lineNumber": 420,
        "line": "\t * @param {Box2} v - A box.\r"
      },
      {
        "lineNumber": 421,
        "line": "\t * @return {Boolean} Whether this box equals the given one.\r"
      },
      {
        "lineNumber": 422,
        "line": "\t */\r"
      },
      {
        "lineNumber": 423,
        "line": "\r"
      },
      {
        "lineNumber": 424,
        "line": "\tequals(b) {\r"
      }
    ],
    "codeParams": [
      "b"
    ],
    "docParams": [
      "v"
    ]
  },
  {
    "name": "Box3#clampPoint",
    "filePath": "src/Box3.js",
    "lines": [
      {
        "lineNumber": 268,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 269,
        "line": "\t * Clamps the given point to the boundaries of this box.\r"
      },
      {
        "lineNumber": 270,
        "line": "\t *\r"
      },
      {
        "lineNumber": 271,
        "line": "\t * @param {Vector3} p - A point.\r"
      },
      {
        "lineNumber": 272,
        "line": "\t * @param {Vector3} [target] - A target vector. If none is provided, a new one will be created.\r"
      },
      {
        "lineNumber": 273,
        "line": "\t * @return {Vector3} The clamped point.\r"
      },
      {
        "lineNumber": 274,
        "line": "\t */\r"
      },
      {
        "lineNumber": 275,
        "line": "\r"
      },
      {
        "lineNumber": 276,
        "line": "\tclampPoint(point, target = new Vector3()) {\r"
      }
    ],
    "codeParams": [
      "point",
      "target"
    ],
    "docParams": [
      "p",
      "target"
    ]
  },
  {
    "name": "Box3#equals",
    "filePath": "src/Box3.js",
    "lines": [
      {
        "lineNumber": 494,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 495,
        "line": "\t * Checks if this box equals the given one.\r"
      },
      {
        "lineNumber": 496,
        "line": "\t *\r"
      },
      {
        "lineNumber": 497,
        "line": "\t * @param {Box3} v - A box.\r"
      },
      {
        "lineNumber": 498,
        "line": "\t * @return {Boolean} Whether this box equals the given one.\r"
      },
      {
        "lineNumber": 499,
        "line": "\t */\r"
      },
      {
        "lineNumber": 500,
        "line": "\r"
      },
      {
        "lineNumber": 501,
        "line": "\tequals(b) {\r"
      }
    ],
    "codeParams": [
      "b"
    ],
    "docParams": [
      "v"
    ]
  },
  {
    "name": "Matrix3#multiplyScalar",
    "filePath": "src/Matrix3.js",
    "lines": [
      {
        "lineNumber": 219,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 220,
        "line": "\t * Multiplies this matrix with a given scalar.\r"
      },
      {
        "lineNumber": 221,
        "line": "\t *\r"
      },
      {
        "lineNumber": 222,
        "line": "\t * @param {Number} m - A scalar.\r"
      },
      {
        "lineNumber": 223,
        "line": "\t * @return {Matrix3} This matrix.\r"
      },
      {
        "lineNumber": 224,
        "line": "\t */\r"
      },
      {
        "lineNumber": 225,
        "line": "\r"
      },
      {
        "lineNumber": 226,
        "line": "\tmultiplyScalar(s) {\r"
      }
    ],
    "codeParams": [
      "s"
    ],
    "docParams": [
      "m"
    ]
  },
  {
    "name": "Matrix3#equals",
    "filePath": "src/Matrix3.js",
    "lines": [
      {
        "lineNumber": 404,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 405,
        "line": "\t * Checks if this matrix equals the given one.\r"
      },
      {
        "lineNumber": 406,
        "line": "\t *\r"
      },
      {
        "lineNumber": 407,
        "line": "\t * @param {Matrix3} m - A matrix.\r"
      },
      {
        "lineNumber": 408,
        "line": "\t * @return {Boolean} Whether the matrix are equal.\r"
      },
      {
        "lineNumber": 409,
        "line": "\t */\r"
      },
      {
        "lineNumber": 410,
        "line": "\r"
      },
      {
        "lineNumber": 411,
        "line": "\tequals(matrix) {\r"
      }
    ],
    "codeParams": [
      "matrix"
    ],
    "docParams": [
      "m"
    ]
  },
  {
    "name": "Matrix4#getMaxScaleOnAxis",
    "filePath": "src/Matrix4.js",
    "lines": [
      {
        "lineNumber": 196,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 197,
        "line": "\t * Returns the largest scale.\r"
      },
      {
        "lineNumber": 198,
        "line": "\t *\r"
      },
      {
        "lineNumber": 199,
        "line": "\t * @param {Matrix4} matrix - A matrix.\r"
      },
      {
        "lineNumber": 200,
        "line": "\t * @return {Matrix4} This matrix.\r"
      },
      {
        "lineNumber": 201,
        "line": "\t */\r"
      },
      {
        "lineNumber": 202,
        "line": "\r"
      },
      {
        "lineNumber": 203,
        "line": "\tgetMaxScaleOnAxis() {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "matrix"
    ]
  },
  {
    "name": "Matrix4#scale",
    "filePath": "src/Matrix4.js",
    "lines": [
      {
        "lineNumber": 838,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 839,
        "line": "\t * Scales this matrix.\r"
      },
      {
        "lineNumber": 840,
        "line": "\t *\r"
      },
      {
        "lineNumber": 841,
        "line": "\t * @param {Number} sx - The X scale.\r"
      },
      {
        "lineNumber": 842,
        "line": "\t * @param {Number} sy - The Y scale.\r"
      },
      {
        "lineNumber": 843,
        "line": "\t * @param {Number} sy - The Z scale.\r"
      },
      {
        "lineNumber": 844,
        "line": "\t * @return {Matrix4} This matrix.\r"
      },
      {
        "lineNumber": 845,
        "line": "\t */\r"
      },
      {
        "lineNumber": 846,
        "line": "\r"
      },
      {
        "lineNumber": 847,
        "line": "\tscale(sx, sy, sz) {\r"
      }
    ],
    "codeParams": [
      "sx",
      "sy",
      "sz"
    ],
    "docParams": [
      "sx",
      "sy",
      "sy"
    ]
  },
  {
    "name": "Matrix4#equals",
    "filePath": "src/Matrix4.js",
    "lines": [
      {
        "lineNumber": 1176,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 1177,
        "line": "\t * Checks if this matrix equals the given one.\r"
      },
      {
        "lineNumber": 1178,
        "line": "\t *\r"
      },
      {
        "lineNumber": 1179,
        "line": "\t * @param {Matrix4} m - A matrix.\r"
      },
      {
        "lineNumber": 1180,
        "line": "\t * @return {Boolean} Whether the matrix are equal.\r"
      },
      {
        "lineNumber": 1181,
        "line": "\t */\r"
      },
      {
        "lineNumber": 1182,
        "line": "\r"
      },
      {
        "lineNumber": 1183,
        "line": "\tequals(matrix) {\r"
      }
    ],
    "codeParams": [
      "matrix"
    ],
    "docParams": [
      "m"
    ]
  },
  {
    "name": "Quaternion.slerpFlat",
    "filePath": "src/Quaternion.js",
    "lines": [
      {
        "lineNumber": 619,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 620,
        "line": "\t * Performs an array-based spherical linear interpolation.\r"
      },
      {
        "lineNumber": 621,
        "line": "\t *\r"
      },
      {
        "lineNumber": 622,
        "line": "\t * @param {Number[]} dst - An array to store the result in.\r"
      },
      {
        "lineNumber": 623,
        "line": "\t * @param {Number} dstOffset - An offset into the destination array.\r"
      },
      {
        "lineNumber": 624,
        "line": "\t * @param {Number[]} src0 - An array that contains the base quaternion values.\r"
      },
      {
        "lineNumber": 625,
        "line": "\t * @param {Number} src0Offset - An offset into the base array.\r"
      },
      {
        "lineNumber": 626,
        "line": "\t * @param {Number[]} src1 - An array that contains the target quaternion values.\r"
      },
      {
        "lineNumber": 627,
        "line": "\t * @param {Number} src1Offset - An offset into the target array.\r"
      },
      {
        "lineNumber": 628,
        "line": "\t * @param {Number} t - The slerp factor.\r"
      },
      {
        "lineNumber": 629,
        "line": "\t */\r"
      },
      {
        "lineNumber": 630,
        "line": "\r"
      },
      {
        "lineNumber": 631,
        "line": "\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\r"
      }
    ],
    "codeParams": [
      "dst",
      "dstOffset",
      "src0",
      "srcOffset0",
      "src1",
      "srcOffset1",
      "t"
    ],
    "docParams": [
      "dst",
      "dstOffset",
      "src0",
      "src0Offset",
      "src1",
      "src1Offset",
      "t"
    ]
  },
  {
    "name": "SymmetricMatrix3#equals",
    "filePath": "src/SymmetricMatrix3.js",
    "lines": [
      {
        "lineNumber": 211,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 212,
        "line": "\t * Checks if this matrix equals the given one.\r"
      },
      {
        "lineNumber": 213,
        "line": "\t *\r"
      },
      {
        "lineNumber": 214,
        "line": "\t * @param {SymmetricMatrix3} m - A matrix.\r"
      },
      {
        "lineNumber": 215,
        "line": "\t * @return {Boolean} Whether the matrices are equal.\r"
      },
      {
        "lineNumber": 216,
        "line": "\t */\r"
      },
      {
        "lineNumber": 217,
        "line": "\r"
      },
      {
        "lineNumber": 218,
        "line": "\tequals(matrix) {\r"
      }
    ],
    "codeParams": [
      "matrix"
    ],
    "docParams": [
      "m"
    ]
  },
  {
    "name": "Vector3#reflect",
    "filePath": "src/Vector3.js",
    "lines": [
      {
        "lineNumber": 574,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 575,
        "line": "\t * Reflects this vector. The given plane normal is assumed to be normalized.\r"
      },
      {
        "lineNumber": 576,
        "line": "\t *\r"
      },
      {
        "lineNumber": 577,
        "line": "\t * @param {Vector3} n - A normal.\r"
      },
      {
        "lineNumber": 578,
        "line": "\t * @return {Vector3} This vector.\r"
      },
      {
        "lineNumber": 579,
        "line": "\t */\r"
      },
      {
        "lineNumber": 580,
        "line": "\r"
      },
      {
        "lineNumber": 581,
        "line": "\treflect(n, target = new Vector3()) {\r"
      }
    ],
    "codeParams": [
      "n",
      "target"
    ],
    "docParams": [
      "n"
    ]
  }
]