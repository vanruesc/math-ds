/**
 * math-ds v1.1.2 build Wed Sep 26 2018
 * https://github.com/vanruesc/math-ds
 * Copyright 2018 Raoul van RÃ¼schen, Zlib
 */
function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}(function(e,a){"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?a(exports):"function"==typeof define&&define.amd?define(["exports"],a):a(e.MATHDS={})})(this,function(e){"use strict";function t(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}function l(e,a){for(var t,l=0;l<a.length;l++)t=a[l],t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}function y(e,a,t){return a&&l(e.prototype,a),t&&l(e,t),e}function n(e,a,t){return h(g(e,t),a)}var o=Math.PI,r=Math.atan2,s=Math.round,i=Math.ceil,u=Math.floor,k=Math.abs,d=Math.acos,g=Math.min,h=Math.max,S=Math.sqrt,p=Math.cos,P=Math.sin,x=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;t(this,e),this.x=a,this.y=l,this.z=y}return y(e,[{key:"set",value:function(e,a,t){return this.x=e,this.y=a,this.z=t,this}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"fromArray",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this.z=e[a+2],this}},{key:"toArray",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e[a+2]=this.z,e}},{key:"setFromSpherical",value:function(e){this.setFromSphericalCoords(e.radius,e.phi,e.theta)}},{key:"setFromSphericalCoords",value:function(e,a,t){var l=P(a)*e;return this.x=l*P(t),this.y=p(a)*e,this.z=l*p(t),this}},{key:"setFromCylindrical",value:function(e){this.setFromCylindricalCoords(e.radius,e.theta,e.y)}},{key:"setFromCylindricalCoords",value:function(e,a,t){return this.x=e*P(a),this.y=t,this.z=e*p(a),this}},{key:"setFromMatrixColumn",value:function(e,a){return this.fromArray(e.elements,4*a)}},{key:"setFromMatrixPosition",value:function(e){var a=e.elements;return this.x=a[12],this.y=a[13],this.z=a[14],this}},{key:"setFromMatrixScale",value:function(e){var a=this.setFromMatrixColumn(e,0).length(),t=this.setFromMatrixColumn(e,1).length(),l=this.setFromMatrixColumn(e,2).length();return this.x=a,this.y=t,this.z=l,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this}},{key:"addVectors",value:function(e,a){return this.x=e.x+a.x,this.y=e.y+a.y,this.z=e.z+a.z,this}},{key:"addScaledVector",value:function(e,a){return this.x+=e.x*a,this.y+=e.y*a,this.z+=e.z*a,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this}},{key:"subVectors",value:function(e,a){return this.x=e.x-a.x,this.y=e.y-a.y,this.z=e.z-a.z,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this}},{key:"multiplyVectors",value:function(e,a){return this.x=e.x*a.x,this.y=e.y*a.y,this.z=e.z*a.z,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}},{key:"divideScalar",value:function(e){return this.x/=e,this.y/=e,this.z/=e,this}},{key:"crossVectors",value:function(e,a){var t=e.x,l=e.y,y=e.z,n=a.x,o=a.y,r=a.z;return this.x=l*r-y*o,this.y=y*n-t*r,this.z=t*o-l*n,this}},{key:"cross",value:function(e){return this.crossVectors(this,e)}},{key:"transformDirection",value:function(a){var t=this.x,l=this.y,y=this.z,n=a.elements;return this.x=n[0]*t+n[4]*l+n[8]*y,this.y=n[1]*t+n[5]*l+n[9]*y,this.z=n[2]*t+n[6]*l+n[10]*y,this.normalize()}},{key:"applyMatrix3",value:function(a){var t=this.x,l=this.y,y=this.z,n=a.elements;return this.x=n[0]*t+n[3]*l+n[6]*y,this.y=n[1]*t+n[4]*l+n[7]*y,this.z=n[2]*t+n[5]*l+n[8]*y,this}},{key:"applyMatrix4",value:function(a){var t=this.x,l=this.y,y=this.z,n=a.elements;return this.x=n[0]*t+n[4]*l+n[8]*y+n[12],this.y=n[1]*t+n[5]*l+n[9]*y+n[13],this.z=n[2]*t+n[6]*l+n[10]*y+n[14],this}},{key:"applyQuaternion",value:function(e){var a=this.x,t=this.y,l=this.z,y=e.x,n=e.y,o=e.z,r=e.w,s=r*a+n*l-o*t,i=r*t+o*a-y*l,u=r*l+y*t-n*a,x=-y*a-n*t-o*l;return this.x=s*r+x*-y+i*-o-u*-n,this.y=i*r+x*-n+u*-y-s*-o,this.z=u*r+x*-o+s*-n-i*-y,this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z}},{key:"reflect",value:function(e){var a=e.x,t=e.y,l=e.z;return this.sub(e.multiplyScalar(2*this.dot(e))),e.set(a,t,l),this}},{key:"angleTo",value:function(e){var a=this.dot(e)/S(this.lengthSquared()*e.lengthSquared());return d(g(h(a,-1),1))}},{key:"manhattanLength",value:function(){return k(this.x)+k(this.y)+k(this.z)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return S(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanDistanceTo",value:function(e){return k(this.x-e.x)+k(this.y-e.y)+k(this.z-e.z)}},{key:"distanceToSquared",value:function(e){var a=this.x-e.x,t=this.y-e.y,l=this.z-e.z;return a*a+t*t+l*l}},{key:"distanceTo",value:function(e){return S(this.distanceToSquared(e))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"min",value:function(e){return this.x=g(this.x,e.x),this.y=g(this.y,e.y),this.z=g(this.z,e.z),this}},{key:"max",value:function(e){return this.x=h(this.x,e.x),this.y=h(this.y,e.y),this.z=h(this.z,e.z),this}},{key:"clamp",value:function(e,a){return this.x=h(e.x,g(a.x,this.x)),this.y=h(e.y,g(a.y,this.y)),this.z=h(e.z,g(a.z,this.z)),this}},{key:"floor",value:function(){return this.x=u(this.x),this.y=u(this.y),this.z=u(this.z),this}},{key:"ceil",value:function(){return this.x=i(this.x),this.y=i(this.y),this.z=i(this.z),this}},{key:"round",value:function(){return this.x=s(this.x),this.y=s(this.y),this.z=s(this.z),this}},{key:"lerp",value:function(e,a){return this.x+=(e.x-this.x)*a,this.y+=(e.y-this.y)*a,this.z+=(e.z-this.z)*a,this}},{key:"lerpVectors",value:function(e,a,t){return this.subVectors(a,e).multiplyScalar(t).add(e)}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}}]),e}(),z=new x,v=[new x,new x,new x,new x,new x,new x,new x,new x],w=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x(1/0,1/0,1/0),l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x(-Infinity,-Infinity,-Infinity);t(this,e),this.min=a,this.max=l}return y(e,[{key:"set",value:function(e,a){return this.min.copy(e),this.max.copy(a),this}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-Infinity,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}},{key:"setFromSphere",value:function(e){return this.set(e.center,e.center),this.expandByScalar(e.radius),this}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"setFromPoints",value:function(e){var a,t;for(this.min.set(0,0,0),this.max.set(0,0,0),(a=0,t=e.length);a<t;++a)this.expandByPoint(e[a]);return this}},{key:"setFromCenterAndSize",value:function(e,a){var t=z.copy(a).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}},{key:"clampPoint",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x;return a.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){var a=z.copy(e).clamp(this.min,this.max);return a.sub(e).length()}},{key:"applyMatrix4",value:function(e){var a=this.min,t=this.max;return this.isEmpty()||(v[0].set(a.x,a.y,a.z).applyMatrix4(e),v[1].set(a.x,a.y,t.z).applyMatrix4(e),v[2].set(a.x,t.y,a.z).applyMatrix4(e),v[3].set(a.x,t.y,t.z).applyMatrix4(e),v[4].set(t.x,a.y,a.z).applyMatrix4(e),v[5].set(t.x,a.y,t.z).applyMatrix4(e),v[6].set(t.x,t.y,a.z).applyMatrix4(e),v[7].set(t.x,t.y,t.z).applyMatrix4(e),this.setFromPoints(v)),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"containsPoint",value:function(e){var a=this.min,t=this.max;return e.x>=a.x&&e.y>=a.y&&e.z>=a.z&&e.x<=t.x&&e.y<=t.y&&e.z<=t.z}},{key:"containsBox",value:function(e){var a=this.min,t=this.max,l=e.min,y=e.max;return a.x<=l.x&&y.x<=t.x&&a.y<=l.y&&y.y<=t.y&&a.z<=l.z&&y.z<=t.z}},{key:"intersectsBox",value:function(e){var a=this.min,t=this.max,l=e.min,y=e.max;return y.x>=a.x&&y.y>=a.y&&y.z>=a.z&&l.x<=t.x&&l.y<=t.y&&l.z<=t.z}},{key:"intersectsSphere",value:function(e){var a=this.clampPoint(e.center,z);return a.distanceToSquared(e.center)<=e.radius*e.radius}},{key:"intersectsPlane",value:function(e){var a,t;return 0<e.normal.x?(a=e.normal.x*this.min.x,t=e.normal.x*this.max.x):(a=e.normal.x*this.max.x,t=e.normal.x*this.min.x),0<e.normal.y?(a+=e.normal.y*this.min.y,t+=e.normal.y*this.max.y):(a+=e.normal.y*this.max.y,t+=e.normal.y*this.min.y),0<e.normal.z?(a+=e.normal.z*this.min.z,t+=e.normal.z*this.max.z):(a+=e.normal.z*this.max.z,t+=e.normal.z*this.min.z),a<=-e.constant&&t>=-e.constant}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),f=new w,T=new x,F=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;t(this,e),this.center=a,this.radius=l}return y(e,[{key:"set",value:function(e,a){return this.center.copy(e),this.radius=a,this}},{key:"copy",value:function(e){return this.center.copy(e.center),this.radius=e.radius,this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"setFromPoints",value:function(e){var a,t,y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:f.setFromPoints(e).getCenter(this.center),n=0;for(a=0,t=e.length;a<t;++a)n=h(n,y.distanceToSquared(e[a]));return this.radius=S(n),this}},{key:"setFromBox",value:function(e){return e.getCenter(this.center),this.radius=.5*e.getSize(T).length(),this}},{key:"isEmpty",value:function(){return 0>=this.radius}},{key:"translate",value:function(e){return this.center.add(e),this}},{key:"clampPoint",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x,t=this.center.distanceToSquared(e);return a.copy(e),t>this.radius*this.radius&&(a.sub(this.center).normalize(),a.multiplyScalar(this.radius).add(this.center)),a}},{key:"distanceToPoint",value:function(e){return e.distanceTo(this.center)-this.radius}},{key:"containsPoint",value:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"intersectsSphere",value:function(e){var a=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=a*a}},{key:"intersectsBox",value:function(e){return e.intersectsSphere(this)}},{key:"intersectsPlane",value:function(e){return k(e.distanceToPoint(this.center))<=this.radius}},{key:"equals",value:function(e){return e.center.equals(this.center)&&e.radius===this.radius}}]),e}(),V=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;t(this,e),this.x=a,this.y=l}return y(e,[{key:"set",value:function(e,a){return this.x=e,this.y=a,this}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"fromArray",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this}},{key:"toArray",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this}},{key:"addVectors",value:function(e,a){return this.x=e.x+a.x,this.y=e.y+a.y,this}},{key:"addScaledVector",value:function(e,a){return this.x+=e.x*a,this.y+=e.y*a,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this}},{key:"subVectors",value:function(e,a){return this.x=e.x-a.x,this.y=e.y-a.y,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this}},{key:"divideScalar",value:function(e){return this.x/=e,this.y/=e,this}},{key:"applyMatrix3",value:function(a){var t=this.x,l=this.y,y=a.elements;return this.x=y[0]*t+y[3]*l+y[6],this.y=y[1]*t+y[4]*l+y[7],this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y}},{key:"cross",value:function(e){return this.x*e.y-this.y*e.x}},{key:"manhattanLength",value:function(){return k(this.x)+k(this.y)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return S(this.x*this.x+this.y*this.y)}},{key:"manhattanDistanceTo",value:function(e){return k(this.x-e.x)+k(this.y-e.y)}},{key:"distanceToSquared",value:function(e){var a=this.x-e.x,t=this.y-e.y;return a*a+t*t}},{key:"distanceTo",value:function(e){return S(this.distanceToSquared(e))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"min",value:function(e){return this.x=g(this.x,e.x),this.y=g(this.y,e.y),this}},{key:"max",value:function(e){return this.x=h(this.x,e.x),this.y=h(this.y,e.y),this}},{key:"clamp",value:function(e,a){return this.x=h(e.x,g(a.x,this.x)),this.y=h(e.y,g(a.y,this.y)),this}},{key:"floor",value:function(){return this.x=u(this.x),this.y=u(this.y),this}},{key:"ceil",value:function(){return this.x=i(this.x),this.y=i(this.y),this}},{key:"round",value:function(){return this.x=s(this.x),this.y=s(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"angle",value:function e(){var e=r(this.y,this.x);return 0>e&&(e+=2*o),e}},{key:"lerp",value:function(e,a){return this.x+=(e.x-this.x)*a,this.y+=(e.y-this.y)*a,this}},{key:"lerpVectors",value:function(e,a,t){return this.subVectors(a,e).multiplyScalar(t).add(e)}},{key:"rotateAround",value:function(e,a){var t=p(a),l=P(a),n=this.x-e.x,o=this.y-e.y;return this.x=n*t-o*l+e.x,this.y=n*l+o*t+e.y,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y}},{key:"width",get:function(){return this.x},set:function(e){return this.x=e}},{key:"height",get:function(){return this.y},set:function(e){return this.y=e}}]),e}(),C=new V,M=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new V(1/0,1/0),l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new V(-Infinity,-Infinity);t(this,e),this.min=a,this.max=l}return y(e,[{key:"set",value:function(e,a){return this.min.copy(e),this.max.copy(a),this}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-Infinity,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y}},{key:"getCenter",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new V;return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new V;return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}},{key:"getBoundingSphere",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new F;return this.getCenter(e.center),e.radius=.5*this.getSize(C).length(),e}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"setFromPoints",value:function(e){var a,t;for(this.min.set(0,0),this.max.set(0,0),(a=0,t=e.length);a<t;++a)this.expandByPoint(e[a]);return this}},{key:"setFromCenterAndSize",value:function(e,a){var t=C.copy(a).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}},{key:"clampPoint",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new V;return a.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){var a=C.copy(e).clamp(this.min,this.max);return a.sub(e).length()}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"containsPoint",value:function(e){var a=this.min,t=this.max;return e.x>=a.x&&e.y>=a.y&&e.x<=t.x&&e.y<=t.y}},{key:"containsBox",value:function(e){var a=this.min,t=this.max,l=e.min,y=e.max;return a.x<=l.x&&y.x<=t.x&&a.y<=l.y&&y.y<=t.y}},{key:"intersectsBox",value:function(e){var a=this.min,t=this.max,l=e.min,y=e.max;return y.x>=a.x&&y.y>=a.y&&l.x<=t.x&&l.y<=t.y}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),A=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;t(this,e),this.radius=a,this.theta=l,this.y=n}return y(e,[{key:"set",value:function(e,a,t){return this.radius=e,this.theta=a,this.y=t,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,a,t){return this.radius=S(e*e+t*t),this.theta=r(e,t),this.y=a,this}}]),e}(),X=function(){function e(){t(this,e),this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}return y(e,[{key:"set",value:function(e,a,t,l,y,n,o,r,s){var i=this.elements;return i[0]=e,i[3]=a,i[6]=t,i[1]=l,i[4]=y,i[7]=n,i[2]=o,i[5]=r,i[8]=s,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(e){var a=e.elements,t=this.elements;return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],this}},{key:"clone",value:function(){return new this.constructor().fromArray(this.elements)}},{key:"fromArray",value:function(e){var a,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,l=this.elements;for(a=0;9>a;++a)l[a]=e[a+t];return this}},{key:"toArray",value:function(){var e,a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,l=this.elements;for(e=0;9>e;++e)a[e+t]=l[e];return a}},{key:"multiplyMatrices",value:function(e,a){var t=e.elements,l=a.elements,y=this.elements,n=t[0],o=t[3],r=t[6],s=t[1],i=t[4],u=t[7],x=t[2],m=t[5],c=t[8],k=l[0],d=l[3],v=l[6],z=l[1],p=l[4],g=l[7],h=l[2],w=l[5],S=l[8];return y[0]=n*k+o*z+r*h,y[3]=n*d+o*p+r*w,y[6]=n*v+o*g+r*S,y[1]=s*k+i*z+u*h,y[4]=s*d+i*p+u*w,y[7]=s*v+i*g+u*S,y[2]=x*k+m*z+c*h,y[5]=x*d+m*p+c*w,y[8]=x*v+m*g+c*S,this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyScalar",value:function(e){var a=this.elements;return a[0]*=e,a[3]*=e,a[6]*=e,a[1]*=e,a[4]*=e,a[7]*=e,a[2]*=e,a[5]*=e,a[8]*=e,this}},{key:"determinant",value:function(){var t=this.elements,l=t[0],a=t[1],y=t[2],n=t[3],o=t[4],e=t[5],r=t[6],s=t[7],u=t[8];return l*o*u-l*e*s-a*n*u+a*e*r+y*n*s-y*o*r}},{key:"getInverse",value:function(e){var a,t=e.elements,l=this.elements,y=t[0],n=t[1],o=t[2],r=t[3],s=t[4],i=t[5],u=t[6],x=t[7],m=t[8],c=m*s-i*x,k=i*u-m*r,d=x*r-s*u,v=y*c+n*k+o*d;return 0==v?(console.error("Can't invert matrix, determinant is zero",e),this.identity()):(a=1/v,l[0]=c*a,l[1]=(o*x-m*n)*a,l[2]=(i*n-o*s)*a,l[3]=k*a,l[4]=(m*y-o*u)*a,l[5]=(o*r-i*y)*a,l[6]=d*a,l[7]=(n*u-x*y)*a,l[8]=(s*y-n*r)*a),this}},{key:"transpose",value:function(){var e,a=this.elements;return e=a[1],a[1]=a[3],a[3]=e,e=a[2],a[2]=a[6],a[6]=e,e=a[5],a[5]=a[7],a[7]=e,this}},{key:"scale",value:function(e,a){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=a,t[4]*=a,t[7]*=a,this}},{key:"rotate",value:function(e){var a=p(e),t=P(e),l=this.elements,y=l[0],n=l[3],o=l[6],r=l[1],s=l[4],i=l[7];return l[0]=a*y+t*r,l[3]=a*n+t*s,l[6]=a*o+t*i,l[1]=-t*y+a*r,l[4]=-t*n+a*s,l[7]=-t*o+a*i,this}},{key:"translate",value:function(e,a){var t=this.elements;return t[0]+=e*t[2],t[3]+=e*t[5],t[6]+=e*t[8],t[1]+=a*t[2],t[4]+=a*t[5],t[7]+=a*t[8],this}},{key:"equals",value:function(e){var a,t=this.elements,l=e.elements,y=!0;for(a=0;y&&9>a;++a)t[a]!==l[a]&&(y=!1);return y}}]),e}(),Y={XYZ:"XYZ",YZX:"YZX",ZXY:"ZXY",XZY:"XZY",YXZ:"YXZ",ZYX:"ZYX"},Z=new x,B=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0;t(this,e),this.x=a,this.y=l,this.z=y,this.w=n}var a=Number.EPSILON;return y(e,[{key:"set",value:function(e,a,t,l){return this.x=e,this.y=a,this.z=t,this.w=l,this}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"fromArray",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this.z=e[a+2],this.w=e[a+3],this}},{key:"toArray",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e[a+2]=this.z,e[a+3]=this.w,e}},{key:"setFromEuler",value:function(e){var a=e.x,t=e.y,l=e.z,y=p,n=P,o=y(a/2),r=y(t/2),s=y(l/2),i=n(a/2),u=n(t/2),x=n(l/2);switch(e.order){case Y.XYZ:this.x=i*r*s+o*u*x,this.y=o*u*s-i*r*x,this.z=o*r*x+i*u*s,this.w=o*r*s-i*u*x;break;case Y.YXZ:this.x=i*r*s+o*u*x,this.y=o*u*s-i*r*x,this.z=o*r*x-i*u*s,this.w=o*r*s+i*u*x;break;case Y.ZXY:this.x=i*r*s-o*u*x,this.y=o*u*s+i*r*x,this.z=o*r*x+i*u*s,this.w=o*r*s-i*u*x;break;case Y.ZYX:this.x=i*r*s-o*u*x,this.y=o*u*s+i*r*x,this.z=o*r*x-i*u*s,this.w=o*r*s+i*u*x;break;case Y.YZX:this.x=i*r*s+o*u*x,this.y=o*u*s+i*r*x,this.z=o*r*x-i*u*s,this.w=o*r*s-i*u*x;break;case Y.XZY:this.x=i*r*s-o*u*x,this.y=o*u*s-i*r*x,this.z=o*r*x+i*u*s,this.w=o*r*s+i*u*x;}return this}},{key:"setFromAxisAngle",value:function(e,a){var t=a/2,l=P(t);return this.x=e.x*l,this.y=e.y*l,this.z=e.z*l,this.w=p(t),this}},{key:"setFromRotationMatrix",value:function(e){var a,t=e.elements,l=t[0],y=t[4],n=t[8],o=t[1],r=t[5],i=t[9],u=t[2],x=t[6],m=t[10],c=l+r+m;return 0<c?(a=.5/S(c+1),this.w=.25/a,this.x=(x-i)*a,this.y=(n-u)*a,this.z=(o-y)*a):l>r&&l>m?(a=2*S(1+l-r-m),this.w=(x-i)/a,this.x=.25*a,this.y=(y+o)/a,this.z=(n+u)/a):r>m?(a=2*S(1+r-l-m),this.w=(n-u)/a,this.x=(y+o)/a,this.y=.25*a,this.z=(i+x)/a):(a=2*S(1+m-l-r),this.w=(o-y)/a,this.x=(n+u)/a,this.y=(i+x)/a,this.z=.25*a),this}},{key:"setFromUnitVectors",value:function(e,a){var t=e.dot(a)+1;return 1e-6>t?(t=0,k(e.x)>k(e.z)?Z.set(-e.y,e.x,0):Z.set(0,-e.z,e.y)):Z.crossVectors(e,a),this.x=Z.x,this.y=Z.y,this.z=Z.z,this.w=t,this.normalize()}},{key:"angleTo",value:function(e){return 2*d(k(g(h(this.dot(e),-1),1)))}},{key:"rotateTowards",value:function(e,a){var t=this.angleTo(e);return 0!==t&&this.slerp(e,g(1,a/t)),this}},{key:"invert",value:function(){return this.conjugate()}},{key:"conjugate",value:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return S(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"normalize",value:function(){var e,a=this.length();return 0===a?(this.x=0,this.y=0,this.z=0,this.w=1):(e=1/a,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:"multiplyQuaternions",value:function(e,a){var t=e.x,l=e.y,y=e.z,n=e.w,o=a.x,r=a.y,s=a.z,i=a.w;return this.x=t*i+n*o+l*s-y*r,this.y=l*i+n*r+y*o-t*s,this.z=y*i+n*s+t*r-l*o,this.w=n*i-t*o-l*r-y*s,this}},{key:"multiply",value:function(e){return this.multiplyQuaternions(this,e)}},{key:"premultiply",value:function(e){return this.multiplyQuaternions(e,this)}},{key:"slerp",value:function(e,l){var t,n,o,i,u,m,c,k=this.x,x=this.y,y=this.z,d=this.w;return 1===l?this.copy(e):0<l&&(t=d*e.w+k*e.x+x*e.y+y*e.z,0>t?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,t=-t):this.copy(e),1<=t?(this.w=d,this.x=k,this.y=x,this.z=y):(n=1-t*t,u=1-l,n<=a?(this.w=u*d+l*this.w,this.x=u*k+l*this.x,this.y=u*x+l*this.y,this.z=u*y+l*this.z,this.normalize()):(o=S(n),i=r(o,t),m=P(u*i)/o,c=P(l*i)/o,this.w=d*m+this.w*c,this.x=k*m+this.x*c,this.y=x*m+this.y*c,this.z=y*m+this.z*c))),this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}}],[{key:"slerp",value:function(e,a,l,y){return l.copy(e).slerp(a,y)}},{key:"slerpFlat",value:function(e,l,y,n,o,i,u){var x,m,c,k,d,v,z,p,g=o[i],h=o[i+1],w=o[i+2],T=o[i+3],F=y[n],V=y[n+1],q=y[n+2],C=y[n+3];(C!==T||F!==g||V!==h||q!==w)&&(x=1-u,k=F*g+V*h+q*w+C*T,v=0<=k?1:-1,d=1-k*k,d>a&&(c=S(d),z=r(c,k*v),x=P(x*z)/c,u=P(u*z)/c),p=u*v,F=F*x+g*p,V=V*x+h*p,q=q*x+w*p,C=C*x+T*p,x===1-u&&(m=1/S(F*F+V*V+q*q+C*C),F*=m,V*=m,q*=m,C*=m)),e[l]=F,e[l+1]=V,e[l+2]=q,e[l+3]=C}}]),e}(),E=new X,m=new B,q=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;t(this,e),this.x=a,this.y=l,this.z=y,this.order=e.defaultOrder}return y(e,[{key:"set",value:function(e,a,t,l){return this.x=e,this.y=a,this.z=t,this.order=l,this}},{key:"copy",value:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.order=a.order,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.order)}},{key:"fromArray",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this.z=e[a+2],this.order=e[a+3],this}},{key:"toArray",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e[a+2]=this.z,e[a+3]=this.order,e}},{key:"toVector3",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x;return e.set(this.x,this.y,this.z)}},{key:"setFromRotationMatrix",value:function(e){var a=Math.asin,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.order,l=e.elements,y=l[0],o=l[4],s=l[8],i=l[1],u=l[5],x=l[9],m=l[2],c=l[6],d=l[10],v=1-1e-5;switch(t){case Y.XYZ:{this.y=a(n(s,-1,1)),k(s)<v?(this.x=r(-x,d),this.z=r(-o,y)):(this.x=r(c,u),this.z=0);break}case Y.YXZ:{this.x=a(-n(x,-1,1)),k(x)<v?(this.y=r(s,d),this.z=r(i,u)):(this.y=r(-m,y),this.z=0);break}case Y.ZXY:{this.x=a(n(c,-1,1)),k(c)<v?(this.y=r(-m,d),this.z=r(-o,u)):(this.y=0,this.z=r(i,y));break}case Y.ZYX:{this.y=a(-n(m,-1,1)),k(m)<v?(this.x=r(c,d),this.z=r(i,y)):(this.x=0,this.z=r(-o,u));break}case Y.YZX:{this.z=a(n(i,-1,1)),k(i)<v?(this.x=r(-x,u),this.y=r(-m,y)):(this.x=0,this.y=r(s,d));break}case Y.XZY:{this.z=a(-n(o,-1,1)),k(o)<v?(this.x=r(c,u),this.y=r(s,y)):(this.x=r(-x,d),this.y=0);break}}return this.order=t,this}},{key:"setFromQuaternion",value:function(e,a){return E.makeRotationFromQuaternion(e),this.setFromRotationMatrix(E,a)}},{key:"setFromVector3",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.order;return this.set(e.x,e.y,e.z,a)}},{key:"reorder",value:function(e){return m.setFromEuler(this),this.setFromQuaternion(m,e)}},{key:"equals",value:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.order===this.order}}],[{key:"defaultOrder",get:function(){return Y.XYZ}}]),e}(),R=new x,a=new x,b=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x(1,0,0),l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;t(this,e),this.normal=a,this.constant=l}return y(e,[{key:"set",value:function(e,a){return this.normal.copy(e),this.constant=a,this}},{key:"setComponents",value:function(e,a,t,l){return this.normal.set(e,a,t),this.constant=l,this}},{key:"copy",value:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"setFromNormalAndCoplanarPoint",value:function(e,a){return this.normal.copy(e),this.constant=-a.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(e,t,l){var y=R.subVectors(l,t).cross(a.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(y,R),this}},{key:"normalize",value:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}},{key:"negate",value:function(){return this.normal.negate(),this.constant=-this.constant,this}},{key:"distanceToPoint",value:function(e){return this.normal.dot(e)+this.constant}},{key:"distanceToSphere",value:function(e){return this.distanceToPoint(e.center)-e.radius}},{key:"projectPoint",value:function(e,a){return a.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}},{key:"coplanarPoint",value:function(e){return e.copy(this.normal).multiplyScalar(-this.constant)}},{key:"translate",value:function(e){return this.constant-=e.dot(this.normal),this}},{key:"intersectLine",value:function(e,a){var l=e.delta(R),y=this.normal.dot(l);if(0===y)0===this.distanceToPoint(e.start)&&a.copy(e.start);else{var n=-(e.start.dot(this.normal)+this.constant)/y;0<=n&&1>=n&&a.copy(l).multiplyScalar(n).add(e.start)}return a}},{key:"intersectsLine",value:function(e){var a=this.distanceToPoint(e.start),t=this.distanceToPoint(e.end);return 0>a&&0<t||0>t&&0<a}},{key:"intersectsBox",value:function(e){return e.intersectsPlane(this)}},{key:"intersectsSphere",value:function(e){return e.intersectsPlane(this)}},{key:"equals",value:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}]),e}(),L=new x,Q=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new b,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new b,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:new b,n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:new b,o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:new b,r=5<arguments.length&&void 0!==arguments[5]?arguments[5]:new b;t(this,e),this.planes=[a,l,y,n,o,r]}return y(e,[{key:"set",value:function(e,a,t,l,y,n){var o=this.planes;return o[0].copy(e),o[1].copy(a),o[2].copy(t),o[3].copy(l),o[4].copy(y),o[5].copy(n),this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"copy",value:function(e){var a,t=this.planes;for(a=0;6>a;++a)t[a].copy(e.planes[a]);return this}},{key:"setFromMatrix",value:function(e){var a=this.planes,t=e.elements,l=t[0],y=t[1],n=t[2],o=t[3],r=t[4],s=t[5],i=t[6],u=t[7],x=t[8],m=t[9],c=t[10],k=t[11],d=t[12],v=t[13],z=t[14],p=t[15];return a[0].setComponents(o-l,u-r,k-x,p-d).normalize(),a[1].setComponents(o+l,u+r,k+x,p+d).normalize(),a[2].setComponents(o+y,u+s,k+m,p+v).normalize(),a[3].setComponents(o-y,u-s,k-m,p-v).normalize(),a[4].setComponents(o-n,u-i,k-c,p-z).normalize(),a[5].setComponents(o+n,u+i,k+c,p+z).normalize(),this}},{key:"intersectsSphere",value:function(e){var a,t,l=this.planes,y=e.center,n=-e.radius,o=!0;for(a=0;6>a;++a)if(t=l[a].distanceToPoint(y),t<n){o=!1;break}return o}},{key:"intersectsBox",value:function(e){var a,t,l=this.planes,y=e.min,n=e.max;for(a=0;6>a;++a)if(t=l[a],L.x=0<t.normal.x?n.x:y.x,L.y=0<t.normal.y?n.y:y.y,L.z=0<t.normal.z?n.z:y.z,0>t.distanceToPoint(L))return!1;return!0}},{key:"containsPoint",value:function(e){var a,t=this.planes,l=!0;for(a=0;6>a;++a)if(0>t[a].distanceToPoint(e)){l=!1;break}return l}}]),e}(),O=new x,D=new x,I=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x;t(this,e),this.start=a,this.end=l}return y(e,[{key:"set",value:function(e,a){return this.start.copy(e),this.end.copy(a),this}},{key:"copy",value:function(e){return this.start.copy(e.start),this.end.copy(e.end),this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"getCenter",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x;return e.addVectors(this.start,this.end).multiplyScalar(.5)}},{key:"delta",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x;return e.subVectors(this.end,this.start)}},{key:"lengthSquared",value:function(){return this.start.distanceToSquared(this.end)}},{key:"length",value:function(){return this.start.distanceTo(this.end)}},{key:"at",value:function(e,a){return this.delta(a).multiplyScalar(e).add(this.start)}},{key:"closestPointToPointParameter",value:function(e,a){O.subVectors(e,this.start),D.subVectors(this.end,this.start);var l=D.dot(D),y=D.dot(O),n=a?g(h(y/l,0),1):y/l;return n}},{key:"closestPointToPoint",value:function(e){var a=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],l=2<arguments.length&&void 0!==arguments[2]?arguments[2]:new x,y=this.closestPointToPointParameter(e,a);return this.delta(l).multiplyScalar(y).add(this.start)}},{key:"equals",value:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}]),e}(),j=new x,N=new x,_=new x,c=function(){function e(){t(this,e),this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}return y(e,[{key:"set",value:function(e,a,t,l,y,n,o,r,s,i,u,x,m,c,k,d){var v=this.elements;return v[0]=e,v[4]=a,v[8]=t,v[12]=l,v[1]=y,v[5]=n,v[9]=o,v[13]=r,v[2]=s,v[6]=i,v[10]=u,v[14]=x,v[3]=m,v[7]=c,v[11]=k,v[15]=d,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"copy",value:function(e){var a=e.elements,t=this.elements;return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15],this}},{key:"clone",value:function(){return new this.constructor().fromArray(this.elements)}},{key:"fromArray",value:function(e){var a,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,l=this.elements;for(a=0;16>a;++a)l[a]=e[a+t];return this}},{key:"toArray",value:function(){var e,a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,l=this.elements;for(e=0;16>e;++e)a[e+t]=l[e];return a}},{key:"getMaxScaleOnAxis",value:function(){var e=this.elements,a=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],t=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],l=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return S(h(a,t,l))}},{key:"copyPosition",value:function(e){var a=this.elements,t=e.elements;return a[12]=t[12],a[13]=t[13],a[14]=t[14],this}},{key:"setPosition",value:function(e){var a=this.elements;return a[12]=e.x,a[13]=e.y,a[14]=e.z,this}},{key:"extractBasis",value:function(e,a,t){return e.setFromMatrixColumn(this,0),a.setFromMatrixColumn(this,1),t.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(e,a,t){return this.set(e.x,a.x,t.x,0,e.y,a.y,t.y,0,e.z,a.z,t.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(e){var a=this.elements,t=e.elements,l=1/j.setFromMatrixColumn(e,0).length(),y=1/j.setFromMatrixColumn(e,1).length(),n=1/j.setFromMatrixColumn(e,2).length();return a[0]=t[0]*l,a[1]=t[1]*l,a[2]=t[2]*l,a[3]=0,a[4]=t[4]*y,a[5]=t[5]*y,a[6]=t[6]*y,a[7]=0,a[8]=t[8]*n,a[9]=t[9]*n,a[10]=t[10]*n,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}},{key:"makeRotationFromEuler",value:function(t){var l,n,o,r,s,i,u,m,k,v,g,h,w=this.elements,S=t.x,x=t.y,y=t.z,z=p(S),a=P(S),T=p(x),c=P(x),d=p(y),e=P(y);switch(t.order){case Y.XYZ:{l=z*d,n=z*e,o=a*d,r=a*e,w[0]=T*d,w[4]=-T*e,w[8]=c,w[1]=n+o*c,w[5]=l-r*c,w[9]=-a*T,w[2]=r-l*c,w[6]=o+n*c,w[10]=z*T;break}case Y.YXZ:{s=T*d,i=T*e,u=c*d,m=c*e,w[0]=s+m*a,w[4]=u*a-i,w[8]=z*c,w[1]=z*e,w[5]=z*d,w[9]=-a,w[2]=i*a-u,w[6]=m+s*a,w[10]=z*T;break}case Y.ZXY:{s=T*d,i=T*e,u=c*d,m=c*e,w[0]=s-m*a,w[4]=-z*e,w[8]=u+i*a,w[1]=i+u*a,w[5]=z*d,w[9]=m-s*a,w[2]=-z*c,w[6]=a,w[10]=z*T;break}case Y.ZYX:{l=z*d,n=z*e,o=a*d,r=a*e,w[0]=T*d,w[4]=o*c-n,w[8]=l*c+r,w[1]=T*e,w[5]=r*c+l,w[9]=n*c-o,w[2]=-c,w[6]=a*T,w[10]=z*T;break}case Y.YZX:{k=z*T,v=z*c,g=a*T,h=a*c,w[0]=T*d,w[4]=h-k*e,w[8]=g*e+v,w[1]=e,w[5]=z*d,w[9]=-a*d,w[2]=-c*d,w[6]=v*e+g,w[10]=k-h*e;break}case Y.XZY:{k=z*T,v=z*c,g=a*T,h=a*c,w[0]=T*d,w[4]=-e,w[8]=c*d,w[1]=k*e+h,w[5]=z*d,w[9]=v*e-g,w[2]=g*e-v,w[6]=a*d,w[10]=h*e+k;break}}return w[3]=0,w[7]=0,w[11]=0,w[12]=0,w[13]=0,w[14]=0,w[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(e){return this.compose(j.set(0,0,0),e,N.set(1,1,1))}},{key:"lookAt",value:function(e,a,t){var l=this.elements,n=j,o=N,y=_;return y.subVectors(e,a),0===y.lengthSquared()&&(y.z=1),y.normalize(),n.crossVectors(t,y),0===n.lengthSquared()&&(1===k(t.z)?y.x+=1e-4:y.z+=1e-4,y.normalize(),n.crossVectors(t,y)),n.normalize(),o.crossVectors(y,n),l[0]=n.x,l[4]=o.x,l[8]=y.x,l[1]=n.y,l[5]=o.y,l[9]=y.y,l[2]=n.z,l[6]=o.z,l[10]=y.z,this}},{key:"multiplyMatrices",value:function(e,a){var t=this.elements,l=e.elements,y=a.elements,n=l[0],o=l[4],r=l[8],s=l[12],i=l[1],u=l[5],x=l[9],m=l[13],c=l[2],k=l[6],d=l[10],v=l[14],z=l[3],p=l[7],g=l[11],h=l[15],w=y[0],S=y[4],P=y[8],f=y[12],T=y[1],F=y[5],V=y[9],q=y[13],C=y[2],M=y[6],b=y[10],A=y[14],X=y[3],Y=y[7],Z=y[11],B=y[15];return t[0]=n*w+o*T+r*C+s*X,t[4]=n*S+o*F+r*M+s*Y,t[8]=n*P+o*V+r*b+s*Z,t[12]=n*f+o*q+r*A+s*B,t[1]=i*w+u*T+x*C+m*X,t[5]=i*S+u*F+x*M+m*Y,t[9]=i*P+u*V+x*b+m*Z,t[13]=i*f+u*q+x*A+m*B,t[2]=c*w+k*T+d*C+v*X,t[6]=c*S+k*F+d*M+v*Y,t[10]=c*P+k*V+d*b+v*Z,t[14]=c*f+k*q+d*A+v*B,t[3]=z*w+p*T+g*C+h*X,t[7]=z*S+p*F+g*M+h*Y,t[11]=z*P+p*V+g*b+h*Z,t[15]=z*f+p*q+g*A+h*B,this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyScalar",value:function(e){var a=this.elements;return a[0]*=e,a[4]*=e,a[8]*=e,a[12]*=e,a[1]*=e,a[5]*=e,a[9]*=e,a[13]*=e,a[2]*=e,a[6]*=e,a[10]*=e,a[14]*=e,a[3]*=e,a[7]*=e,a[11]*=e,a[15]*=e,this}},{key:"determinant",value:function(){var e=this.elements,a=e[0],t=e[4],l=e[8],y=e[12],n=e[1],o=e[5],r=e[9],s=e[13],i=e[2],u=e[6],x=e[10],m=e[14],c=e[3],k=e[7],d=e[11],v=e[15],z=a*o,p=a*r,g=a*s,h=t*n,w=t*r,S=t*s,P=l*n,f=l*o,T=l*s,F=y*n,V=y*o,q=y*r;return c*(q*u-T*u-V*x+S*x+f*m-w*m)+k*(p*m-g*x+F*x-P*m+T*i-q*i)+d*(g*u-z*m-F*u+h*m+V*i-S*i)+v*(-f*i-p*u+z*x+P*u-h*x+w*i)}},{key:"getInverse",value:function(e){var a,t=this.elements,l=e.elements,y=l[0],n=l[1],o=l[2],r=l[3],s=l[4],i=l[5],u=l[6],x=l[7],m=l[8],c=l[9],k=l[10],d=l[11],v=l[12],z=l[13],p=l[14],g=l[15],h=c*p*x-z*k*x+z*u*d-i*p*d-c*u*g+i*k*g,w=v*k*x-m*p*x-v*u*d+s*p*d+m*u*g-s*k*g,S=m*z*x-v*c*x+v*i*d-s*z*d-m*i*g+s*c*g,P=v*c*u-m*z*u-v*i*k+s*z*k+m*i*p-s*c*p,f=y*h+n*w+o*S+r*P;return 0==f?(console.error("Can't invert matrix, determinant is zero",e),this.identity()):(a=1/f,t[0]=h*a,t[1]=(z*k*r-c*p*r-z*o*d+n*p*d+c*o*g-n*k*g)*a,t[2]=(i*p*r-z*u*r+z*o*x-n*p*x-i*o*g+n*u*g)*a,t[3]=(c*u*r-i*k*r-c*o*x+n*k*x+i*o*d-n*u*d)*a,t[4]=w*a,t[5]=(m*p*r-v*k*r+v*o*d-y*p*d-m*o*g+y*k*g)*a,t[6]=(v*u*r-s*p*r-v*o*x+y*p*x+s*o*g-y*u*g)*a,t[7]=(s*k*r-m*u*r+m*o*x-y*k*x-s*o*d+y*u*d)*a,t[8]=S*a,t[9]=(v*c*r-m*z*r-v*n*d+y*z*d+m*n*g-y*c*g)*a,t[10]=(s*z*r-v*i*r+v*n*x-y*z*x-s*n*g+y*i*g)*a,t[11]=(m*i*r-s*c*r-m*n*x+y*c*x+s*n*d-y*i*d)*a,t[12]=P*a,t[13]=(m*z*o-v*c*o+v*n*k-y*z*k-m*n*p+y*c*p)*a,t[14]=(v*i*o-s*z*o-v*n*u+y*z*u+s*n*p-y*i*p)*a,t[15]=(s*c*o-m*i*o+m*n*u-y*c*u-s*n*k+y*i*k)*a),this}},{key:"transpose",value:function(){var e,a=this.elements;return e=a[1],a[1]=a[4],a[4]=e,e=a[2],a[2]=a[8],a[8]=e,e=a[6],a[6]=a[9],a[9]=e,e=a[3],a[3]=a[12],a[12]=e,e=a[7],a[7]=a[13],a[13]=e,e=a[11],a[11]=a[14],a[14]=e,this}},{key:"scale",value:function(e,a,t){var l=this.elements;return l[0]*=e,l[4]*=a,l[8]*=t,l[1]*=e,l[5]*=a,l[9]*=t,l[2]*=e,l[6]*=a,l[10]*=t,l[3]*=e,l[7]*=a,l[11]*=t,this}},{key:"makeScale",value:function(e,a,t){return this.set(e,0,0,0,0,a,0,0,0,0,t,0,0,0,0,1),this}},{key:"makeTranslation",value:function(e,a,t){return this.set(1,0,0,e,0,1,0,a,0,0,1,t,0,0,0,1),this}},{key:"makeRotationX",value:function(e){var a=p(e),t=P(e);return this.set(1,0,0,0,0,a,-t,0,0,t,a,0,0,0,0,1),this}},{key:"makeRotationY",value:function(e){var a=p(e),t=P(e);return this.set(a,0,t,0,0,1,0,0,-t,0,a,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(e){var a=p(e),t=P(e);return this.set(a,-t,0,0,t,a,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(e,a){var l=p(a),n=P(a),o=1-l,t=e.x,r=e.y,y=e.z,s=o*t,i=o*r;return this.set(s*t+l,s*r-n*y,s*y+n*r,0,s*r+n*y,i*r+l,i*y-n*t,0,s*y-n*r,i*y+n*t,o*y*y+l,0,0,0,0,1),this}},{key:"makeShear",value:function(e,a,t){return this.set(1,a,t,0,e,1,t,0,e,a,1,0,0,0,0,1),this}},{key:"compose",value:function(e,a,t){var l=this.elements,n=a.x,o=a.y,y=a.z,r=a.w,s=n+n,i=o+o,u=y+y,x=n*s,m=n*i,c=n*u,k=o*i,d=o*u,v=y*u,z=r*s,p=r*i,g=r*u,h=t.x,w=t.y,S=t.z;return l[0]=(1-(k+v))*h,l[1]=(m+g)*h,l[2]=(c-p)*h,l[3]=0,l[4]=(m-g)*w,l[5]=(1-(x+v))*w,l[6]=(d+z)*w,l[7]=0,l[8]=(c+p)*S,l[9]=(d-z)*S,l[10]=(1-(x+k))*S,l[11]=0,l[12]=e.x,l[13]=e.y,l[14]=e.z,l[15]=1,this}},{key:"decompose",value:function(e,a,t){var l=this.elements,y=l[0],n=l[1],o=l[2],r=l[4],s=l[5],i=l[6],u=l[8],x=l[9],m=l[10],c=this.determinant(),k=j.set(y,n,o).length()*(0>c?-1:1),d=j.set(r,s,i).length(),v=j.set(u,x,m).length(),z=1/k,p=1/d,g=1/v;return e.x=l[12],e.y=l[13],e.z=l[14],l[0]*=z,l[1]*=z,l[2]*=z,l[4]*=p,l[5]*=p,l[6]*=p,l[8]*=g,l[9]*=g,l[10]*=g,a.setFromRotationMatrix(this),l[0]=y,l[1]=n,l[2]=o,l[4]=r,l[5]=s,l[6]=i,l[8]=u,l[9]=x,l[10]=m,t.x=k,t.y=d,t.z=v,this}},{key:"makePerspective",value:function(e,a,t,l,y,n){var o=this.elements;return o[0]=2*y/(a-e),o[4]=0,o[8]=(a+e)/(a-e),o[12]=0,o[1]=0,o[5]=2*y/(t-l),o[9]=(t+l)/(t-l),o[13]=0,o[2]=0,o[6]=0,o[10]=-(n+y)/(n-y),o[14]=-2*n*y/(n-y),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}},{key:"makeOrthographic",value:function(e,a,t,l,y,n){var o=this.elements,r=1/(a-e),s=1/(t-l),i=1/(n-y);return o[0]=2*r,o[4]=0,o[8]=0,o[12]=-((a+e)*r),o[1]=0,o[5]=2*s,o[9]=0,o[13]=-((t+l)*s),o[2]=0,o[6]=0,o[10]=-2*i,o[14]=-((n+y)*i),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}},{key:"equals",value:function(e){var a,t=this.elements,l=e.elements,y=!0;for(a=0;y&&16>a;++a)t[a]!==l[a]&&(y=!1);return y}}]),e}(),U=[new x,new x,new x,new x],H=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new x,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x;t(this,e),this.origin=a,this.direction=l}return y(e,[{key:"set",value:function(e,a){return this.origin.copy(e),this.direction.copy(a),this}},{key:"copy",value:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"at",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x;return a.copy(this.direction).multiplyScalar(e).add(this.origin)}},{key:"lookAt",value:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this}},{key:"recast",value:function(e){return this.origin.copy(this.at(e,U[0])),this}},{key:"closestPointToPoint",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x,t=a.subVectors(e,this.origin).dot(this.direction);return 0<=t?a.copy(this.direction).multiplyScalar(t).add(this.origin):a.copy(this.origin)}},{key:"distanceSquaredToPoint",value:function(e){var a=U[0].subVectors(e,this.origin).dot(this.direction);return 0>a?this.origin.distanceToSquared(e):U[0].copy(this.direction).multiplyScalar(a).add(this.origin).distanceToSquared(e)}},{key:"distanceToPoint",value:function(e){return S(this.distanceSquaredToPoint(e))}},{key:"distanceToPlane",value:function(e){var a=e.normal.dot(this.direction),l=0===a?0===e.distanceToPoint(this.origin)?0:-1:-(this.origin.dot(e.normal)+e.constant)/a;return 0<=l?l:null}},{key:"distanceSquaredToSegment",value:function(e,a,t,l){var y,n,o,r,s,i=U[0].copy(e).add(a).multiplyScalar(.5),u=U[1].copy(a).sub(e).normalize(),x=U[2].copy(this.origin).sub(i),m=.5*e.distanceTo(a),d=-this.direction.dot(u),v=x.dot(this.direction),z=-x.dot(u),p=x.lengthSq(),c=k(1-d*d);return 0<c?(y=d*z-v,n=d*v-z,o=m*c,0<=y?n>=-o?n<=o?(r=1/c,y*=r,n*=r,s=y*(y+d*n+2*v)+n*(d*y+n+2*z)+p):(n=m,y=h(0,-(d*n+v)),s=-y*y+n*(n+2*z)+p):(n=-m,y=h(0,-(d*n+v)),s=-y*y+n*(n+2*z)+p):n<=-o?(y=h(0,-(-d*m+v)),n=0<y?-m:g(h(-m,-z),m),s=-y*y+n*(n+2*z)+p):n<=o?(y=0,n=g(h(-m,-z),m),s=n*(n+2*z)+p):(y=h(0,-(d*m+v)),n=0<y?m:g(h(-m,-z),m),s=-y*y+n*(n+2*z)+p)):(n=0<d?-m:m,y=h(0,-(d*n+v)),s=-y*y+n*(n+2*z)+p),void 0!==t&&t.copy(this.direction).multiplyScalar(y).add(this.origin),void 0!==l&&l.copy(u).multiplyScalar(n).add(i),s}},{key:"intersectSphere",value:function(e){var a,t,l,y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x,n=U[0].subVectors(e.center,this.origin),o=n.dot(this.direction),r=n.dot(n)-o*o,s=e.radius*e.radius,i=null;return r<=s&&(a=S(s-r),t=o-a,l=o+a,(0<=t||0<=l)&&(i=0>t?this.at(l,y):this.at(t,y))),i}},{key:"intersectsSphere",value:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}},{key:"intersectPlane",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x,l=this.distanceToPlane(e);return null===l?null:this.at(l,a)}},{key:"intersectsPlane",value:function(e){var a=e.distanceToPoint(this.origin);return 0===a||0>e.normal.dot(this.direction)*a}},{key:"intersectBox",value:function(e){var a,t,l,y,n,o,r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new x,s=this.origin,i=this.direction,u=e.min,m=e.max,c=1/i.x,k=1/i.y,d=1/i.z,v=null;return 0<=c?(a=(u.x-s.x)*c,t=(m.x-s.x)*c):(a=(m.x-s.x)*c,t=(u.x-s.x)*c),0<=k?(l=(u.y-s.y)*k,y=(m.y-s.y)*k):(l=(m.y-s.y)*k,y=(u.y-s.y)*k),a<=y&&l<=t&&((l>a||a!==a)&&(a=l),(y<t||t!==t)&&(t=y),0<=d?(n=(u.z-s.z)*d,o=(m.z-s.z)*d):(n=(m.z-s.z)*d,o=(u.z-s.z)*d),a<=o&&n<=t&&((n>a||a!==a)&&(a=n),(o<t||t!==t)&&(t=o),0<=t&&(v=this.at(0<=a?a:t,r)))),v}},{key:"intersectsBox",value:function(e){return null!==this.intersectBox(e,U[0])}},{key:"intersectTriangle",value:function(e,a,t,l,y){var n,o,r,s,i,u=this.direction,x=U[0],m=U[1],c=U[2],k=U[3],d=null;return m.subVectors(a,e),c.subVectors(t,e),k.crossVectors(m,c),n=u.dot(k),0===n||l&&0<n||(0<n?o=1:(o=-1,n=-n),x.subVectors(this.origin,e),r=o*u.dot(c.crossVectors(x,c)),0<=r&&(s=o*u.dot(m.cross(x)),0<=s&&r+s<=n&&(i=-o*x.dot(k),0<=i&&(d=this.at(i/n,y))))),d}},{key:"applyMatrix4",value:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}},{key:"equals",value:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}]),e}(),G=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;t(this,e),this.radius=a,this.phi=l,this.theta=y}return y(e,[{key:"set",value:function(e,a,t){return this.radius=e,this.phi=a,this.theta=t,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"makeSafe",value:function(){return this.phi=h(1e-6,g(o-1e-6,this.phi)),this}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,a,t){return this.radius=S(e*e+a*a+t*t),0===this.radius?(this.theta=0,this.phi=0):(this.theta=r(e,t),this.phi=d(g(h(a/this.radius,-1),1))),this}}]),e}(),W=function(){function e(){t(this,e),this.elements=new Float32Array([1,0,0,1,0,1])}return y(e,[{key:"set",value:function(a,t,l,y,n,o){var r=this.elements;return r[0]=a,r[1]=t,r[3]=y,r[2]=l,r[4]=n,r[5]=o,this}},{key:"identity",value:function(){return this.set(1,0,0,1,0,1),this}},{key:"copy",value:function(e){var a=e.elements;return this.set(a[0],a[1],a[2],a[3],a[4],a[5]),this}},{key:"clone",value:function(){return new this.constructor().copy(this)}},{key:"toMatrix3",value:function(e){var a=e.elements;e.set(a[0],a[1],a[2],a[1],a[3],a[4],a[2],a[4],a[5])}},{key:"add",value:function(e){var a=this.elements,t=e.elements;return a[0]+=t[0],a[1]+=t[1],a[3]+=t[3],a[2]+=t[2],a[4]+=t[4],a[5]+=t[5],this}},{key:"norm",value:function(){var a=this.elements,e=a[1]*a[1],t=a[2]*a[2],l=a[4]*a[4];return S(a[0]*a[0]+e+t+e+a[3]*a[3]+l+t+l+a[5]*a[5])}},{key:"off",value:function(){var a=this.elements;return S(2*(a[1]*a[1]+a[2]*a[2]+a[4]*a[4]))}},{key:"applyToVector3",value:function(a){var t=a.x,l=a.y,y=a.z,n=this.elements;return a.x=n[0]*t+n[1]*l+n[2]*y,a.y=n[1]*t+n[3]*l+n[4]*y,a.z=n[2]*t+n[4]*l+n[5]*y,a}},{key:"equals",value:function(e){var a,t=this.elements,l=e.elements,y=!0;for(a=0;y&&6>a;++a)t[a]!==l[a]&&(y=!1);return y}}],[{key:"calculateIndex",value:function(e,a){return 3-(3-e)*(2-e)/2+a}}]),e}(),K=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0;t(this,e),this.x=a,this.y=l,this.z=y,this.w=n}return y(e,[{key:"set",value:function(e,a,t,l){return this.x=e,this.y=a,this.z=t,this.w=l,this}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"fromArray",value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this.z=e[a+2],this.w=e[a+3],this}},{key:"toArray",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e[a+2]=this.z,e[a+3]=this.w,e}},{key:"setAxisAngleFromQuaternion",value:function(e){this.w=2*d(e.w);var a=S(1-e.w*e.w);return 1e-4>a?(this.x=1,this.y=0,this.z=0):(this.x=e.x/a,this.y=e.y/a,this.z=e.z/a),this}},{key:"setAxisAngleFromRotationMatrix",value:function(e){var a,t,l,n,r,i,u,m,c,v,p,g=.01,h=.1,w=e.elements,P=w[0],f=w[4],T=w[8],F=w[1],V=w[5],q=w[9],C=w[2],M=w[6],b=w[10];return k(f-F)<g&&k(T-C)<g&&k(q-M)<g?k(f+F)<h&&k(T+C)<h&&k(q+M)<h&&k(P+V+b-3)<h?this.set(1,0,0,0):(a=o,r=(P+1)/2,i=(V+1)/2,u=(b+1)/2,m=(f+F)/4,c=(T+C)/4,v=(q+M)/4,r>i&&r>u?r<g?(t=0,l=.707106781,n=.707106781):(t=S(r),l=m/t,n=c/t):i>u?i<g?(t=.707106781,l=0,n=.707106781):(l=S(i),t=m/l,n=v/l):u<g?(t=.707106781,l=.707106781,n=0):(n=S(u),t=c/n,l=v/n),this.set(t,l,n,a)):(p=S((M-q)*(M-q)+(T-C)*(T-C)+(F-f)*(F-f)),.001>k(p)&&(p=1),this.x=(M-q)/p,this.y=(T-C)/p,this.z=(F-f)/p,this.w=d((P+V+b-1)/2)),this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}},{key:"addVectors",value:function(e,a){return this.x=e.x+a.x,this.y=e.y+a.y,this.z=e.z+a.z,this.w=e.w+a.w,this}},{key:"addScaledVector",value:function(e,a){return this.x+=e.x*a,this.y+=e.y*a,this.z+=e.z*a,this.w+=e.w*a,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}},{key:"subVectors",value:function(e,a){return this.x=e.x-a.x,this.y=e.y-a.y,this.z=e.z-a.z,this.w=e.w-a.w,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}},{key:"multiplyVectors",value:function(e,a){return this.x=e.x*a.x,this.y=e.y*a.y,this.z=e.z*a.z,this.w=e.w*a.w,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}},{key:"divideScalar",value:function(e){return this.x/=e,this.y/=e,this.z/=e,this.w/=e,this}},{key:"applyMatrix4",value:function(a){var t=this.x,l=this.y,y=this.z,n=this.w,o=a.elements;return this.x=o[0]*t+o[4]*l+o[8]*y+o[12]*n,this.y=o[1]*t+o[5]*l+o[9]*y+o[13]*n,this.z=o[2]*t+o[6]*l+o[10]*y+o[14]*n,this.w=o[3]*t+o[7]*l+o[11]*y+o[15]*n,this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:"manhattanLength",value:function(){return k(this.x)+k(this.y)+k(this.z)+k(this.w)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return S(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"manhattanDistanceTo",value:function(e){return k(this.x-e.x)+k(this.y-e.y)+k(this.z-e.z)+k(this.w-e.w)}},{key:"distanceToSquared",value:function(e){var a=this.x-e.x,t=this.y-e.y,l=this.z-e.z,y=this.w-e.w;return a*a+t*t+l*l+y*y}},{key:"distanceTo",value:function(e){return S(this.distanceToSquared(e))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"min",value:function(e){return this.x=g(this.x,e.x),this.y=g(this.y,e.y),this.z=g(this.z,e.z),this.w=g(this.w,e.w),this}},{key:"max",value:function(e){return this.x=h(this.x,e.x),this.y=h(this.y,e.y),this.z=h(this.z,e.z),this.w=h(this.w,e.w),this}},{key:"clamp",value:function(e,a){return this.x=h(e.x,g(a.x,this.x)),this.y=h(e.y,g(a.y,this.y)),this.z=h(e.z,g(a.z,this.z)),this.w=h(e.w,g(a.w,this.w)),this}},{key:"floor",value:function(){return this.x=u(this.x),this.y=u(this.y),this.z=u(this.z),this.w=u(this.w),this}},{key:"ceil",value:function(){return this.x=i(this.x),this.y=i(this.y),this.z=i(this.z),this.w=i(this.w),this}},{key:"round",value:function(){return this.x=s(this.x),this.y=s(this.y),this.z=s(this.z),this.w=s(this.w),this}},{key:"lerp",value:function(e,a){return this.x+=(e.x-this.x)*a,this.y+=(e.y-this.y)*a,this.z+=(e.z-this.z)*a,this.w+=(e.w-this.w)*a,this}},{key:"lerpVectors",value:function(e,a,t){return this.subVectors(a,e).multiplyScalar(t).add(e)}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}}]),e}();e.Box2=M,e.Box3=w,e.Cylindrical=A,e.Euler=q,e.Frustum=Q,e.Line3=I,e.Matrix3=X,e.Matrix4=c,e.Plane=b,e.Quaternion=B,e.RotationOrder=Y,e.Ray=H,e.Sphere=F,e.Spherical=G,e.SymmetricMatrix3=W,e.Vector2=V,e.Vector3=x,e.Vector4=K,Object.defineProperty(e,"__esModule",{value:!0})});
