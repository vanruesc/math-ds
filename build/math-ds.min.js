/**
 * math-ds v0.2.1 build Oct 10 2017
 * https://github.com/vanruesc/math-ds
 * Copyright 2017 Raoul van RÃ¼schen, Zlib
 */

!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i(t.MATHDS={})}(this,function(t){"use strict";function i(t,i,e){return Math.max(Math.min(t,e),i)}!function(){function t(t){this.value=t}function i(i){function e(s,h){try{var r=i[s](h),a=r.value;a instanceof t?Promise.resolve(a.value).then(function(t){e("next",t)},function(t){e("throw",t)}):n(r.done?"return":"normal",r.value)}catch(t){n("throw",t)}}function n(t,i){switch(t){case"return":s.resolve({value:i,done:!0});break;case"throw":s.reject(i);break;default:s.resolve({value:i,done:!1})}(s=s.next)?e(s.key,s.arg):h=null}var s,h;this._invoke=function(t,i){return new Promise(function(n,r){var a={key:t,arg:i,resolve:n,reject:r,next:null};h?h=h.next=a:(s=h=a,e(t,i))})},"function"!=typeof i.return&&(this.return=void 0)}"function"==typeof Symbol&&Symbol.asyncIterator&&(i.prototype[Symbol.asyncIterator]=function(){return this}),i.prototype.next=function(t){return this._invoke("next",t)},i.prototype.throw=function(t){return this._invoke("throw",t)},i.prototype.return=function(t){return this._invoke("return",t)}}();var e=function(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")},n=function(){function t(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(i,e,n){return e&&t(i.prototype,e),n&&t(i,n),i}}(),s=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;e(this,t),this.x=i,this.y=n,this.z=s}return n(t,[{key:"set",value:function(t,i,e){return this.x=t,this.y=i,this.z=e,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}},{key:"setFromSpherical",value:function(t){var i=Math.sin(t.phi)*t.radius;return this.x=i*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=i*Math.cos(t.theta),this}},{key:"setFromCylindrical",value:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this}},{key:"setFromMatrixColumn",value:function(t,i){return this.fromArray(t.elements,4*i)}},{key:"setFromMatrixPosition",value:function(t){var i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}},{key:"setFromMatrixScale",value:function(t){var i=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=e,this.z=n,this}},{key:"add",value:function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}},{key:"addScalar",value:function(t){return this.x+=t,this.y+=t,this.z+=t,this}},{key:"addVectors",value:function(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}},{key:"addScaledVector",value:function(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}},{key:"sub",value:function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}},{key:"subScalar",value:function(t){return this.x-=t,this.y-=t,this.z-=t,this}},{key:"subVectors",value:function(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}},{key:"multiply",value:function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}},{key:"multiplyScalar",value:function(t){return this.x*=t,this.y*=t,this.z*=t,this}},{key:"multiplyVectors",value:function(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}},{key:"divide",value:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}},{key:"divideScalar",value:function(t){return this.x/=t,this.y/=t,this.z/=t,this}},{key:"cross",value:function(t){var i=this.x,e=this.y,n=this.z;return this.x=e*t.z-n*t.y,this.y=n*t.x-i*t.z,this.z=i*t.y-e*t.x,this}},{key:"crossVectors",value:function(t,i){var e=t.x,n=t.y,s=t.z,h=i.x,r=i.y,a=i.z;return this.x=n*a-s*r,this.y=s*h-e*a,this.z=e*r-n*h,this}},{key:"transformDirection",value:function(t){var i=this.x,e=this.y,n=this.z,s=t.elements;return this.x=s[0]*i+s[4]*e+s[8]*n,this.y=s[1]*i+s[5]*e+s[9]*n,this.z=s[2]*i+s[6]*e+s[10]*n,this.normalize()}},{key:"applyMatrix3",value:function(t){var i=this.x,e=this.y,n=this.z,s=t.elements;return this.x=s[0]*i+s[3]*e+s[6]*n,this.y=s[1]*i+s[4]*e+s[7]*n,this.z=s[2]*i+s[5]*e+s[8]*n,this}},{key:"applyMatrix4",value:function(t){var i=this.x,e=this.y,n=this.z,s=t.elements;return this.x=s[0]*i+s[4]*e+s[8]*n+s[12],this.y=s[1]*i+s[5]*e+s[9]*n+s[13],this.z=s[2]*i+s[6]*e+s[10]*n+s[14],this}},{key:"applyQuaternion",value:function(t){var i=this.x,e=this.y,n=this.z,s=t.x,h=t.y,r=t.z,a=t.w,u=a*i+h*n-r*e,o=a*e+r*i-s*n,l=a*n+s*e-h*i,y=-s*i-h*e-r*n;return this.x=u*a+y*-s+o*-r-l*-h,this.y=o*a+y*-h+l*-s-u*-r,this.z=l*a+y*-r+u*-h-o*-s,this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y+this.z*t.z}},{key:"reflect",value:function(i){arguments.length>1&&void 0!==arguments[1]?arguments[1]:new t;var e=i.x,n=i.y,s=i.z;return this.sub(i.multiplyScalar(2*this.dot(i))),i.set(e,n,s),this}},{key:"angleTo",value:function(t){var i=this.dot(t)/Math.sqrt(this.lengthSquared()*t.lengthSquared());return Math.acos(Math.min(Math.max(i,-1),1))}},{key:"lengthManhattan",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"distanceToManhattan",value:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}},{key:"distanceToSquared",value:function(t){var i=this.x-t.x,e=this.y-t.y,n=this.z-t.z;return i*i+e*e+n*n}},{key:"distanceTo",value:function(t){return Math.sqrt(this.distanceToSquared(t))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(t){return this.normalize().multiplyScalar(t)}},{key:"min",value:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}},{key:"max",value:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}},{key:"clamp",value:function(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}},{key:"lerp",value:function(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}},{key:"lerpVectors",value:function(t,i,e){return this.subVectors(i,t).multiplyScalar(e).add(t)}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}}]),t}(),h=new s,r=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s(1/0,1/0,1/0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s(-1/0,-1/0,-1/0);e(this,t),this.min=i,this.max=n}return n(t,[{key:"set",value:function(t,i){return this.min.copy(t),this.max.copy(i),this}},{key:"copy",value:function(t){return this.min.copy(t.min),this.max.copy(t.max),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s;return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}},{key:"getBoundingSphere",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new u;return this.getCenter(t.center),t.radius=.5*this.getSize(h).length(),t}},{key:"expandByPoint",value:function(t){return this.min.min(t),this.max.max(t),this}},{key:"expandByVector",value:function(t){return this.min.sub(t),this.max.add(t),this}},{key:"expandByScalar",value:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this}},{key:"setFromPoints",value:function(t){var i=void 0,e=void 0;for(this.min.set(0,0,0),this.max.set(0,0,0),i=0,e=t.length;i<e;++i)this.expandByPoint(t[i]);return this}},{key:"setFromCenterAndSize",value:function(t,i){var e=h.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}},{key:"clampPoint",value:function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s).copy(t).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(t){return h.copy(t).clamp(this.min,this.max).sub(t).length()}},{key:"translate",value:function(t){return this.min.add(t),this.max.add(t),this}},{key:"intersect",value:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(t){return this.min.min(t.min),this.max.max(t.max),this}},{key:"containsPoint",value:function(t){var i=this.min,e=this.max;return t.x>=i.x&&t.y>=i.y&&t.z>=i.z&&t.x<=e.x&&t.y<=e.y&&t.z<=e.z}},{key:"containsBox",value:function(t){var i=this.min,e=this.max,n=t.min,s=t.max;return i.x<=n.x&&s.x<=e.x&&i.y<=n.y&&s.y<=e.y&&i.z<=n.z&&s.z<=e.z}},{key:"intersectsBox",value:function(t){var i=this.min,e=this.max,n=t.min,s=t.max;return s.x>=i.x&&s.y>=i.y&&s.z>=i.z&&n.x<=e.x&&n.y<=e.y&&n.z<=e.z}},{key:"intersectsSphere",value:function(t){return this.clampPoint(t.center,h).distanceToSquared(t.center)<=t.radius*t.radius}},{key:"intersectsPlane",value:function(t){var i=void 0,e=void 0;return t.normal.x>0?(i=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),i<=t.constant&&e>=t.constant}},{key:"equals",value:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}]),t}(),a=new r,u=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;e(this,t),this.center=i,this.radius=n}return n(t,[{key:"set",value:function(t,i){return this.center.copy(t),this.radius=i,this}},{key:"copy",value:function(t){return this.center.copy(t.center),this.radius=t.radius,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"setFromPoints",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a.setFromPoints(t).getCenter(this.center),e=0,n=void 0,s=void 0;for(n=0,s=t.length;n<s;++n)e=Math.max(e,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(e),this}},{key:"getBoundingBox",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new r;return t.set(this.center,this.center),t.expandByScalar(this.radius),t}},{key:"isEmpty",value:function(){return this.radius<=0}},{key:"translate",value:function(t){return this.center.add(t),this}},{key:"clampPoint",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s,e=this.center.distanceToSquared(t);return i.copy(t),e>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}},{key:"distanceToPoint",value:function(t){return t.distanceTo(this.center)-this.radius}},{key:"containsPoint",value:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"intersectsSphere",value:function(t){var i=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=i*i}},{key:"intersectsBox",value:function(t){return t.intersectsSphere(this)}},{key:"intersectsPlane",value:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}},{key:"equals",value:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}]),t}(),o=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;e(this,t),this.x=i,this.y=n}return n(t,[{key:"set",value:function(t,i){return this.x=t,this.y=i,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t}},{key:"add",value:function(t){return this.x+=t.x,this.y+=t.y,this}},{key:"addScalar",value:function(t){return this.x+=t,this.y+=t,this}},{key:"addVectors",value:function(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}},{key:"addScaledVector",value:function(t,i){return this.x+=t.x*i,this.y+=t.y*i,this}},{key:"sub",value:function(t){return this.x-=t.x,this.y-=t.y,this}},{key:"subScalar",value:function(t){return this.x-=t,this.y-=t,this}},{key:"subVectors",value:function(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}},{key:"multiply",value:function(t){return this.x*=t.x,this.y*=t.y,this}},{key:"multiplyScalar",value:function(t){return this.x*=t,this.y*=t,this}},{key:"divide",value:function(t){return this.x/=t.x,this.y/=t.y,this}},{key:"divideScalar",value:function(t){return this.x/=t,this.y/=t,this}},{key:"applyMatrix3",value:function(t){var i=this.x,e=this.y,n=t.elements;return this.x=n[0]*i+n[3]*e+n[6],this.y=n[1]*i+n[4]*e+n[7],this}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y}},{key:"lengthManhattan",value:function(){return Math.abs(this.x)+Math.abs(this.y)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"distanceToManhattan",value:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}},{key:"distanceToSquared",value:function(t){var i=this.x-t.x,e=this.y-t.y;return i*i+e*e}},{key:"distanceTo",value:function(t){return Math.sqrt(this.distanceToSquared(t))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(t){return this.normalize().multiplyScalar(t)}},{key:"min",value:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}},{key:"max",value:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}},{key:"clamp",value:function(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"angle",value:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t}},{key:"lerp",value:function(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this}},{key:"lerpVectors",value:function(t,i,e){return this.subVectors(i,t).multiplyScalar(e).add(t)}},{key:"rotateAround",value:function(t,i){var e=Math.cos(i),n=Math.sin(i),s=this.x-t.x,h=this.y-t.y;return this.x=s*e-h*n+t.x,this.y=s*n+h*e+t.y,this}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y}},{key:"width",get:function(){return this.x},set:function(t){return this.x=t}},{key:"height",get:function(){return this.y},set:function(t){return this.y=t}}]),t}(),l=new o,y=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new o(1/0,1/0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new o(-1/0,-1/0);e(this,t),this.min=i,this.max=n}return n(t,[{key:"set",value:function(t,i){return this.min.copy(t),this.max.copy(i),this}},{key:"copy",value:function(t){return this.min.copy(t.min),this.max.copy(t.max),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y}},{key:"getCenter",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new o;return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new o;return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}},{key:"getBoundingSphere",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new u;return this.getCenter(t.center),t.radius=.5*this.getSize(l).length(),t}},{key:"expandByPoint",value:function(t){return this.min.min(t),this.max.max(t),this}},{key:"expandByVector",value:function(t){return this.min.sub(t),this.max.add(t),this}},{key:"expandByScalar",value:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this}},{key:"setFromPoints",value:function(t){var i=void 0,e=void 0;for(this.min.set(0,0),this.max.set(0,0),i=0,e=t.length;i<e;++i)this.expandByPoint(t[i]);return this}},{key:"setFromCenterAndSize",value:function(t,i){var e=l.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}},{key:"clampPoint",value:function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:new o).copy(t).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(t){return l.copy(t).clamp(this.min,this.max).sub(t).length()}},{key:"translate",value:function(t){return this.min.add(t),this.max.add(t),this}},{key:"intersect",value:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(t){return this.min.min(t.min),this.max.max(t.max),this}},{key:"containsPoint",value:function(t){var i=this.min,e=this.max;return t.x>=i.x&&t.y>=i.y&&t.x<=e.x&&t.y<=e.y}},{key:"containsBox",value:function(t){var i=this.min,e=this.max,n=t.min,s=t.max;return i.x<=n.x&&s.x<=e.x&&i.y<=n.y&&s.y<=e.y}},{key:"intersectsBox",value:function(t){var i=this.min,e=this.max,n=t.min,s=t.max;return s.x>=i.x&&s.y>=i.y&&n.x<=e.x&&n.y<=e.y}},{key:"equals",value:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}]),t}(),c=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;e(this,t),this.radius=i,this.theta=n,this.y=s}return n(t,[{key:"set",value:function(t,i,e){return this.radius=t,this.theta=i,this.y=e,this}},{key:"copy",value:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"setFromVector3",value:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}}]),t}(),v=function(){function t(){e(this,t),this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}return n(t,[{key:"set",value:function(t,i,e,n,s,h,r,a,u){var o=this.elements;return o[0]=t,o[3]=i,o[6]=e,o[1]=n,o[4]=s,o[7]=h,o[2]=r,o[5]=a,o[8]=u,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(t){var i=t.elements,e=this.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=this.elements,n=void 0;for(n=0;n<9;++n)e[n]=t[n+i];return this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=this.elements,n=void 0;for(n=0;n<9;++n)t[n+i]=e[n];return t}},{key:"multiplyMatrices",value:function(t,i){var e=t.elements,n=i.elements,s=this.elements,h=e[0],r=e[3],a=e[6],u=e[1],o=e[4],l=e[7],y=e[2],c=e[5],v=e[8],x=n[0],m=n[3],d=n[6],f=n[1],k=n[4],z=n[7],M=n[2],p=n[5],w=n[8];return s[0]=h*x+r*f+a*M,s[3]=h*m+r*k+a*p,s[6]=h*d+r*z+a*w,s[1]=u*x+o*f+l*M,s[4]=u*m+o*k+l*p,s[7]=u*d+o*z+l*w,s[2]=y*x+c*f+v*M,s[5]=y*m+c*k+v*p,s[8]=y*d+c*z+v*w,this}},{key:"multiply",value:function(t){return this.multiplyMatrices(this,t)}},{key:"premultiply",value:function(t){return this.multiplyMatrices(t,this)}},{key:"multiplyScalar",value:function(t){var i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this}},{key:"determinant",value:function(){var t=this.elements,i=t[0],e=t[1],n=t[2],s=t[3],h=t[4],r=t[5],a=t[6],u=t[7],o=t[8];return i*h*o-i*r*u-e*s*o+e*r*a+n*s*u-n*h*a}},{key:"getInverse",value:function(t){var i=t.elements,e=this.elements,n=i[0],s=i[1],h=i[2],r=i[3],a=i[4],u=i[5],o=i[6],l=i[7],y=i[8],c=y*a-u*l,v=u*o-y*r,x=l*r-a*o,m=n*c+s*v+h*x,d=void 0;return 0!==m?(d=1/m,e[0]=c*d,e[1]=(h*l-y*s)*d,e[2]=(u*s-h*a)*d,e[3]=v*d,e[4]=(y*n-h*o)*d,e[5]=(h*r-u*n)*d,e[6]=x*d,e[7]=(s*o-l*n)*d,e[8]=(a*n-s*r)*d):(console.error("Can't invert matrix, determinant is zero",t),this.identity()),this}},{key:"transpose",value:function(){var t=this.elements,i=void 0;return i=t[1],t[1]=t[3],t[3]=i,i=t[2],t[2]=t[6],t[6]=i,i=t[5],t[5]=t[7],t[7]=i,this}},{key:"scale",value:function(t,i){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=i,e[4]*=i,e[7]*=i,this}},{key:"rotate",value:function(t){var i=Math.cos(t),e=Math.sin(t),n=this.elements,s=n[0],h=n[3],r=n[6],a=n[1],u=n[4],o=n[7];return n[0]=i*s+e*a,n[3]=i*h+e*u,n[6]=i*r+e*o,n[1]=-e*s+i*a,n[4]=-e*h+i*u,n[7]=-e*r+i*o,this}},{key:"translate",value:function(t,i){var e=this.elements;return e[0]+=t*e[2],e[3]+=t*e[5],e[6]+=t*e[8],e[1]+=i*e[2],e[4]+=i*e[5],e[7]+=i*e[8],this}},{key:"equals",value:function(t){var i=this.elements,e=t.elements,n=!0,s=void 0;for(s=0;n&&s<9;++s)i[s]!==e[s]&&(n=!1);return n}}]),t}(),x={XYZ:"XYZ",YZX:"YZX",ZXY:"ZXY",XZY:"XZY",YXZ:"YXZ",ZYX:"ZYX"},m=new s,d=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;e(this,t),this.x=i,this.y=n,this.z=s,this.w=h}return n(t,[{key:"set",value:function(t,i,e,n){return this.x=t,this.y=i,this.z=e,this.w=n,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.w=t[i+3],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.w,t}},{key:"setFromEuler",value:function(t){var i=t.x,e=t.y,n=t.z,s=Math.cos,h=Math.sin,r=s(i/2),a=s(e/2),u=s(n/2),o=h(i/2),l=h(e/2),y=h(n/2);switch(t.order){case x.XYZ:this.x=o*a*u+r*l*y,this.y=r*l*u-o*a*y,this.z=r*a*y+o*l*u,this.w=r*a*u-o*l*y;break;case x.YXZ:this.x=o*a*u+r*l*y,this.y=r*l*u-o*a*y,this.z=r*a*y-o*l*u,this.w=r*a*u+o*l*y;break;case x.ZXY:this.x=o*a*u-r*l*y,this.y=r*l*u+o*a*y,this.z=r*a*y+o*l*u,this.w=r*a*u-o*l*y;break;case x.ZYX:this.x=o*a*u-r*l*y,this.y=r*l*u+o*a*y,this.z=r*a*y-o*l*u,this.w=r*a*u+o*l*y;break;case x.YZX:this.x=o*a*u+r*l*y,this.y=r*l*u+o*a*y,this.z=r*a*y-o*l*u,this.w=r*a*u-o*l*y;break;case x.XZY:this.x=o*a*u-r*l*y,this.y=r*l*u-o*a*y,this.z=r*a*y+o*l*u,this.w=r*a*u+o*l*y}return this}},{key:"setFromAxisAngle",value:function(t,i){var e=i/2,n=Math.sin(e);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e),this}},{key:"setFromRotationMatrix",value:function(t){var i=t.elements,e=i[0],n=i[4],s=i[8],h=i[1],r=i[5],a=i[9],u=i[2],o=i[6],l=i[10],y=e+r+l,c=void 0;return y>0?(c=.5/Math.sqrt(y+1),this.w=.25/c,this.x=(o-a)*c,this.y=(s-u)*c,this.z=(h-n)*c):e>r&&e>l?(c=2*Math.sqrt(1+e-r-l),this.w=(o-a)/c,this.x=.25*c,this.y=(n+h)/c,this.z=(s+u)/c):r>l?(c=2*Math.sqrt(1+r-e-l),this.w=(s-u)/c,this.x=(n+h)/c,this.y=.25*c,this.z=(a+o)/c):(c=2*Math.sqrt(1+l-e-r),this.w=(h-n)/c,this.x=(s+u)/c,this.y=(a+o)/c,this.z=.25*c),this}},{key:"setFromUnitVectors",value:function(t,i){var e=t.dot(i)+1;return e<1e-6?(e=0,Math.abs(t.x)>Math.abs(t.z)?m.set(-t.y,t.x,0):m.set(0,-t.z,t.y)):m.crossVectors(t,i),this.x=m.x,this.y=m.y,this.z=m.z,this.w=e,this.normalize()}},{key:"invert",value:function(){return this.conjugate().normalize()}},{key:"conjugate",value:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"normalize",value:function(){var t=this.length(),i=void 0;return 0===t?(this.x=0,this.y=0,this.z=0,this.w=1):(i=1/t,this.x=this.x*i,this.y=this.y*i,this.z=this.z*i,this.w=this.w*i),this}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}},{key:"multiplyQuaternions",value:function(t,i){var e=t.x,n=t.y,s=t.z,h=t.w,r=i.x,a=i.y,u=i.z,o=i.w;return this.x=e*o+h*r+n*u-s*a,this.y=n*o+h*a+s*r-e*u,this.z=s*o+h*u+e*a-n*r,this.w=h*o-e*r-n*a-s*u,this}},{key:"multiply",value:function(t){return this.multiplyQuaternions(this,t)}},{key:"premultiply",value:function(t){return this.multiplyQuaternions(t,this)}},{key:"slerp",value:function(t,i){var e=this.x,n=this.y,s=this.z,h=this.w,r=void 0,a=void 0,u=void 0,o=void 0,l=void 0;if(1===i)this.copy(t);else if(i>0){if((r=h*t.w+e*t.x+n*t.y+s*t.z)<0?(this.w=-t.w,this.x=-t.x,this.y=-t.y,this.z=-t.z,r=-r):this.copy(t),r>=1)return this.w=h,this.x=e,this.y=n,this.z=s,this;if(a=Math.sqrt(1-r*r),Math.abs(a)<.001)return this.w=.5*(h+this.w),this.x=.5*(e+this.x),this.y=.5*(n+this.y),this.z=.5*(s+this.z),this;u=Math.atan2(a,r),o=Math.sin((1-i)*u)/a,l=Math.sin(i*u)/a,this.w=h*o+this.w*l,this.x=e*o+this.x*l,this.y=n*o+this.y*l,this.z=s*o+this.z*l}return this}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}}],[{key:"slerp",value:function(i,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new t,s=arguments[3];return n.copy(i).slerp(e,s)}},{key:"slerpFlat",value:function(t,i,e,n,s,h,r){var a=s[h],u=s[h+1],o=s[h+2],l=s[h+3],y=e[n],c=e[n+1],v=e[n+2],x=e[n+3],m=void 0,d=void 0,f=void 0,k=void 0,z=void 0,M=void 0,p=void 0,w=void 0;x===l&&y===a&&c===u&&v===o||(m=1-r,M=(k=y*a+c*u+v*o+x*l)>=0?1:-1,(z=1-k*k)>Number.EPSILON&&(f=Math.sqrt(z),p=Math.atan2(f,k*M),m=Math.sin(m*p)/f,r=Math.sin(r*p)/f),y=y*m+a*(w=r*M),c=c*m+u*w,v=v*m+o*w,x=x*m+l*w,m===1-r&&(y*=d=1/Math.sqrt(y*y+c*c+v*v+x*x),c*=d,v*=d,x*=d)),t[i]=y,t[i+1]=c,t[i+2]=v,t[i+3]=x}}]),t}(),f=new v,k=new d,z=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;e(this,t),this.x=i,this.y=n,this.z=s,this.order=t.defaultOrder}return n(t,[{key:"set",value:function(t,i,e,n){return this.x=t,this.y=i,this.z=e,this.order=e,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.order=t.order,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.order)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.order=t[i+3],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.order,t}},{key:"toVector3",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s).set(this.x,this.y,this.z)}},{key:"setFromRotationMatrix",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.order,n=t.elements,s=n[0],h=n[4],r=n[8],a=n[1],u=n[5],o=n[9],l=n[2],y=n[6],c=n[10];switch(e){case x.XYZ:this.y=Math.asin(i(r,-1,1)),Math.abs(r)<.99999?(this.x=Math.atan2(-o,c),this.z=Math.atan2(-h,s)):(this.x=Math.atan2(y,u),this.z=0);break;case x.YXZ:this.x=Math.asin(-i(o,-1,1)),Math.abs(o)<.99999?(this.y=Math.atan2(r,c),this.z=Math.atan2(a,u)):(this.y=Math.atan2(-l,s),this.z=0);break;case x.ZXY:this.x=Math.asin(i(y,-1,1)),Math.abs(y)<.99999?(this.y=Math.atan2(-l,c),this.z=Math.atan2(-h,u)):(this.y=0,this.z=Math.atan2(a,s));break;case x.ZYX:this.y=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this.x=Math.atan2(y,c),this.z=Math.atan2(a,s)):(this.x=0,this.z=Math.atan2(-h,u));break;case x.YZX:this.z=Math.asin(i(a,-1,1)),Math.abs(a)<.99999?(this.x=Math.atan2(-o,u),this.y=Math.atan2(-l,s)):(this.x=0,this.y=Math.atan2(r,c));break;case x.XZY:this.z=Math.asin(-i(h,-1,1)),Math.abs(h)<.99999?(this.x=Math.atan2(y,u),this.y=Math.atan2(r,s)):(this.x=Math.atan2(-o,c),this.y=0)}return this.order=e,this}},{key:"setFromQuaternion",value:function(t,i){return f.makeRotationFromQuaternion(t),this.setFromRotationMatrix(f,i)}},{key:"setFromVector3",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.order;return this.set(t.x,t.y,t.z,i)}},{key:"reorder",value:function(t){return k.setFromEuler(this),this.setFromQuaternion(k,t)}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.order===this.order}}],[{key:"defaultOrder",get:function(){return x.XYZ}}]),t}(),M=new s,p=new s,w=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s;e(this,t),this.start=i,this.end=n}return n(t,[{key:"set",value:function(t,i){return this.start.copy(t),this.end.copy(i),this}},{key:"copy",value:function(t){return this.start.copy(t.start),this.end.copy(t.end),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"getCenter",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s).addVectors(this.start,this.end).multiplyScalar(.5)}},{key:"delta",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s).subVectors(this.end,this.start)}},{key:"lengthSquared",value:function(){return this.start.distanceToSquared(this.end)}},{key:"length",value:function(){return this.start.distanceTo(this.end)}},{key:"at",value:function(t,i){return this.delta(i).multiplyScalar(t).add(this.start)}},{key:"closestPointToPointParameter",value:function(t,i){M.subVectors(t,this.start),p.subVectors(this.end,this.start);var e=p.dot(p),n=p.dot(M);return i?Math.min(Math.max(n/e,0),1):n/e}},{key:"closestPointToPoint",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1],e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new s,n=this.closestPointToPointParameter(t,i);return this.delta(e).multiplyScalar(n).add(this.start)}},{key:"equals",value:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}]),t}(),g=new s,S=new s,b=new s,q=function(){function t(){e(this,t),this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}return n(t,[{key:"set",value:function(t,i,e,n,s,h,r,a,u,o,l,y,c,v,x,m){var d=this.elements;return d[0]=t,d[4]=i,d[8]=e,d[12]=n,d[1]=s,d[5]=h,d[9]=r,d[13]=a,d[2]=u,d[6]=o,d[10]=l,d[14]=y,d[3]=c,d[7]=v,d[11]=x,d[15]=m,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"copy",value:function(t){var i=t.elements,e=this.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=this.elements,n=void 0;for(n=0;n<16;++n)e[n]=t[n+i];return this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=this.elements,n=void 0;for(n=0;n<16;++n)t[n+i]=e[n];return t}},{key:"getMaxScaleOnAxis",value:function(){var t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,e,n))}},{key:"copyPosition",value:function(t){var i=this.elements,e=t.elements;return i[12]=e[12],i[13]=e[13],i[14]=e[14],this}},{key:"setPosition",value:function(t){var i=this.elements;return i[12]=t.x,i[13]=t.y,i[14]=t.z,this}},{key:"extractBasis",value:function(t,i,e){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(t,i,e){return this.set(t.x,i.x,e.x,0,t.y,i.y,e.y,0,t.z,i.z,e.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(t){var i=this.elements,e=t.elements,n=1/g.setFromMatrixColumn(t,0).length(),s=1/g.setFromMatrixColumn(t,1).length(),h=1/g.setFromMatrixColumn(t,2).length();return i[0]=e[0]*n,i[1]=e[1]*n,i[2]=e[2]*n,i[4]=e[4]*s,i[5]=e[5]*s,i[6]=e[6]*s,i[8]=e[8]*h,i[9]=e[9]*h,i[10]=e[10]*h,this}},{key:"makeRotationFromEuler",value:function(t){var i=this.elements,e=t.x,n=t.y,s=t.z,h=Math.cos(e),r=Math.sin(e),a=Math.cos(n),u=Math.sin(n),o=Math.cos(s),l=Math.sin(s),y=void 0,c=void 0,v=void 0,m=void 0,d=void 0,f=void 0,k=void 0,z=void 0,M=void 0,p=void 0,w=void 0,g=void 0;switch(t.order){case x.XYZ:y=h*o,c=h*l,v=r*o,m=r*l,i[0]=a*o,i[4]=-a*l,i[8]=u,i[1]=c+v*u,i[5]=y-m*u,i[9]=-r*a,i[2]=m-y*u,i[6]=v+c*u,i[10]=h*a;break;case x.YXZ:d=a*o,f=a*l,k=u*o,z=u*l,i[0]=d+z*r,i[4]=k*r-f,i[8]=h*u,i[1]=h*l,i[5]=h*o,i[9]=-r,i[2]=f*r-k,i[6]=z+d*r,i[10]=h*a;break;case x.ZXY:d=a*o,f=a*l,k=u*o,z=u*l,i[0]=d-z*r,i[4]=-h*l,i[8]=k+f*r,i[1]=f+k*r,i[5]=h*o,i[9]=z-d*r,i[2]=-h*u,i[6]=r,i[10]=h*a;break;case x.ZYX:y=h*o,c=h*l,v=r*o,m=r*l,i[0]=a*o,i[4]=v*u-c,i[8]=y*u+m,i[1]=a*l,i[5]=m*u+y,i[9]=c*u-v,i[2]=-u,i[6]=r*a,i[10]=h*a;break;case x.YZX:M=h*a,p=h*u,w=r*a,g=r*u,i[0]=a*o,i[4]=g-M*l,i[8]=w*l+p,i[1]=l,i[5]=h*o,i[9]=-r*o,i[2]=-u*o,i[6]=p*l+w,i[10]=M-g*l;break;case x.XZY:M=h*a,p=h*u,w=r*a,g=r*u,i[0]=a*o,i[4]=-l,i[8]=u*o,i[1]=M*l+g,i[5]=h*o,i[9]=p*l-w,i[2]=w*l-p,i[6]=r*o,i[10]=g*l+M}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(t){var i=this.elements,e=t.x,n=t.y,s=t.z,h=t.w,r=e+e,a=n+n,u=s+s,o=e*r,l=e*a,y=e*u,c=n*a,v=n*u,x=s*u,m=h*r,d=h*a,f=h*u;return i[0]=1-(c+x),i[4]=l-f,i[8]=y+d,i[1]=l+f,i[5]=1-(o+x),i[9]=v-m,i[2]=y-d,i[6]=v+m,i[10]=1-(o+c),i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}},{key:"lookAt",value:function(t,i,e){var n=this.elements,s=g,h=S,r=b;return r.subVectors(t,i),0===r.lengthSquared()&&(r.z=1),r.normalize(),s.crossVectors(e,r),0===s.lengthSquared()&&(1===Math.abs(e.z)?r.x+=1e-4:r.z+=1e-4,r.normalize(),s.crossVectors(e,r)),s.normalize(),h.crossVectors(r,s),n[0]=s.x,n[4]=h.x,n[8]=r.x,n[1]=s.y,n[5]=h.y,n[9]=r.y,n[2]=s.z,n[6]=h.z,n[10]=r.z,this}},{key:"multiplyMatrices",value:function(t,i){var e=this.elements,n=t.elements,s=i.elements,h=n[0],r=n[4],a=n[8],u=n[12],o=n[1],l=n[5],y=n[9],c=n[13],v=n[2],x=n[6],m=n[10],d=n[14],f=n[3],k=n[7],z=n[11],M=n[15],p=s[0],w=s[4],g=s[8],S=s[12],b=s[1],q=s[5],P=s[9],T=s[13],V=s[2],F=s[6],A=s[10],X=s[14],Y=s[3],Z=s[7],C=s[11],B=s[15];return e[0]=h*p+r*b+a*V+u*Y,e[4]=h*w+r*q+a*F+u*Z,e[8]=h*g+r*P+a*A+u*C,e[12]=h*S+r*T+a*X+u*B,e[1]=o*p+l*b+y*V+c*Y,e[5]=o*w+l*q+y*F+c*Z,e[9]=o*g+l*P+y*A+c*C,e[13]=o*S+l*T+y*X+c*B,e[2]=v*p+x*b+m*V+d*Y,e[6]=v*w+x*q+m*F+d*Z,e[10]=v*g+x*P+m*A+d*C,e[14]=v*S+x*T+m*X+d*B,e[3]=f*p+k*b+z*V+M*Y,e[7]=f*w+k*q+z*F+M*Z,e[11]=f*g+k*P+z*A+M*C,e[15]=f*S+k*T+z*X+M*B,this}},{key:"multiply",value:function(t){return this.multiplyMatrices(this,t)}},{key:"premultiply",value:function(t){return this.multiplyMatrices(t,this)}},{key:"multiplyScalar",value:function(t){var i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this}},{key:"determinant",value:function(){var t=this.elements,i=t[0],e=t[4],n=t[8],s=t[12],h=t[1],r=t[5],a=t[9],u=t[13],o=t[2],l=t[6],y=t[10],c=t[14],v=i*r,x=i*a,m=i*u,d=e*h,f=e*a,k=e*u,z=n*h,M=n*r,p=n*u,w=s*h,g=s*r,S=s*a;return t[3]*(S*l-p*l-g*y+k*y+M*c-f*c)+t[7]*(x*c-m*y+w*y-z*c+p*o-S*o)+t[11]*(m*l-v*c-w*l+d*c+g*o-k*o)+t[15]*(-M*o-x*l+v*y+z*l-d*y+f*o)}},{key:"getInverse",value:function(t){var i=this.elements,e=t.elements,n=e[0],s=e[1],h=e[2],r=e[3],a=e[4],u=e[5],o=e[6],l=e[7],y=e[8],c=e[9],v=e[10],x=e[11],m=e[12],d=e[13],f=e[14],k=e[15],z=c*f*l-d*v*l+d*o*x-u*f*x-c*o*k+u*v*k,M=m*v*l-y*f*l-m*o*x+a*f*x+y*o*k-a*v*k,p=y*d*l-m*c*l+m*u*x-a*d*x-y*u*k+a*c*k,w=m*c*o-y*d*o-m*u*v+a*d*v+y*u*f-a*c*f,g=n*z+s*M+h*p+r*w,S=void 0;return 0!==g?(S=1/g,i[0]=z*S,i[1]=(d*v*r-c*f*r-d*h*x+s*f*x+c*h*k-s*v*k)*S,i[2]=(u*f*r-d*o*r+d*h*l-s*f*l-u*h*k+s*o*k)*S,i[3]=(c*o*r-u*v*r-c*h*l+s*v*l+u*h*x-s*o*x)*S,i[4]=M*S,i[5]=(y*f*r-m*v*r+m*h*x-n*f*x-y*h*k+n*v*k)*S,i[6]=(m*o*r-a*f*r-m*h*l+n*f*l+a*h*k-n*o*k)*S,i[7]=(a*v*r-y*o*r+y*h*l-n*v*l-a*h*x+n*o*x)*S,i[8]=p*S,i[9]=(m*c*r-y*d*r-m*s*x+n*d*x+y*s*k-n*c*k)*S,i[10]=(a*d*r-m*u*r+m*s*l-n*d*l-a*s*k+n*u*k)*S,i[11]=(y*u*r-a*c*r-y*s*l+n*c*l+a*s*x-n*u*x)*S,i[12]=w*S,i[13]=(y*d*h-m*c*h+m*s*v-n*d*v-y*s*f+n*c*f)*S,i[14]=(m*u*h-a*d*h-m*s*o+n*d*o+a*s*f-n*u*f)*S,i[15]=(a*c*h-y*u*h+y*s*o-n*c*o-a*s*v+n*u*v)*S):(console.error("Can't invert matrix, determinant is zero",t),this.identity()),this}},{key:"transpose",value:function(){var t=this.elements,i=void 0;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this}},{key:"scale",value:function(t,i,e){var n=this.elements;return n[0]*=t,n[4]*=i,n[8]*=e,n[1]*=t,n[5]*=i,n[9]*=e,n[2]*=t,n[6]*=i,n[10]*=e,n[3]*=t,n[7]*=i,n[11]*=e,this}},{key:"makeScale",value:function(t,i,e){return this.set(t,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1),this}},{key:"makeTranslation",value:function(t,i,e){return this.set(1,0,0,t,0,1,0,i,0,0,1,e,0,0,0,1),this}},{key:"makeRotationX",value:function(t){var i=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,i,-e,0,0,e,i,0,0,0,0,1),this}},{key:"makeRotationY",value:function(t){var i=Math.cos(t),e=Math.sin(t);return this.set(i,0,e,0,0,1,0,0,-e,0,i,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(t){var i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,0,e,i,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(t,i){var e=Math.cos(i),n=Math.sin(i),s=1-e,h=t.x,r=t.y,a=t.z,u=s*h,o=s*r;return this.set(u*h+e,u*r-n*a,u*a+n*r,0,u*r+n*a,o*r+e,o*a-n*h,0,u*a-n*r,o*a+n*h,s*a*a+e,0,0,0,0,1),this}},{key:"makeShear",value:function(t,i,e){return this.set(1,i,e,0,t,1,e,0,t,i,1,0,0,0,0,1),this}},{key:"compose",value:function(t,i,e){return this.makeRotationFromQuaternion(i),this.scale(e.x,e.y,e.z),this.setPosition(t),this}},{key:"decompose",value:function(t,i,e){var n=this.elements,s=n[0],h=n[1],r=n[2],a=n[4],u=n[5],o=n[6],l=n[8],y=n[9],c=n[10],v=this.determinant(),x=g.set(s,h,r).length()*(v<0?-1:1),m=g.set(a,u,o).length(),d=g.set(l,y,c).length(),f=1/x,k=1/m,z=1/d;return t.x=n[12],t.y=n[13],t.z=n[14],n[0]*=f,n[1]*=f,n[2]*=f,n[4]*=k,n[5]*=k,n[6]*=k,n[8]*=z,n[9]*=z,n[10]*=z,i.setFromRotationMatrix(this),n[0]=s,n[1]=h,n[2]=r,n[4]=a,n[5]=u,n[6]=o,n[8]=l,n[9]=y,n[10]=c,e.x=x,e.y=m,e.z=d,this}},{key:"makePerspective",value:function(t,i,e,n,s,h){var r=this.elements,a=2*s/(i-t),u=2*s/(e-n),o=(i+t)/(i-t),l=(e+n)/(e-n),y=-(h+s)/(h-s),c=-2*h*s/(h-s);return r[0]=a,r[4]=0,r[8]=o,r[12]=0,r[1]=0,r[5]=u,r[9]=l,r[13]=0,r[2]=0,r[6]=0,r[10]=y,r[14]=c,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this}},{key:"makeOrthographic",value:function(t,i,e,n,s,h){var r=this.elements,a=1/(i-t),u=1/(e-n),o=1/(h-s),l=(i+t)*a,y=(e+n)*u,c=(h+s)*o;return r[0]=2*a,r[4]=0,r[8]=0,r[12]=-l,r[1]=0,r[5]=2*u,r[9]=0,r[13]=-y,r[2]=0,r[6]=0,r[10]=-2*o,r[14]=-c,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this}},{key:"equals",value:function(t){var i=this.elements,e=t.elements,n=!0,s=void 0;for(s=0;n&&s<16;++s)i[s]!==e[s]&&(n=!1);return n}}]),t}(),P=new s,T=new s,V=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s(1,0,0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;e(this,t),this.normal=i,this.constant=n}return n(t,[{key:"set",value:function(t,i){return this.normal.copy(t),this.constant=i,this}},{key:"setComponents",value:function(t,i,e,n){return this.normal.set(t,i,e),this.constant=n,this}},{key:"copy",value:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"setFromNormalAndCoplanarPoint",value:function(t,i){return this.normal.copy(t),this.constant=-i.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(t,i,e){var n=P.subVectors(e,i).cross(T.subVectors(t,i)).normalize();return this.setFromNormalAndCoplanarPoint(n,P),this}},{key:"normalize",value:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}},{key:"negate",value:function(){return this.normal.negate(),this.constant=-this.constant,this}},{key:"distanceToPoint",value:function(t){return this.normal.dot(t)+this.constant}},{key:"distanceToSphere",value:function(t){return this.distanceToPoint(t.center)-t.radius}},{key:"projectPoint",value:function(t,i){return i.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}},{key:"coplanarPoint",value:function(t){return t.copy(this.normal).multiplyScalar(-this.constant)}},{key:"translate",value:function(t){return this.constant-=t.dot(this.normal),this}},{key:"intersectLine",value:function(t,i){var e=t.delta(P),n=this.normal.dot(e);if(0===n)0===this.distanceToPoint(t.start)&&i.copy(t.start);else{var s=-(t.start.dot(this.normal)+this.constant)/n;s>=0&&s<=1&&i.copy(e).multiplyScalar(s).add(t.start)}return i}},{key:"intersectsLine",value:function(t){var i=this.distanceToPoint(t.start),e=this.distanceToPoint(t.end);return i<0&&e>0||e<0&&i>0}},{key:"intersectsBox",value:function(t){return t.intersectsPlane(this)}},{key:"intersectsSphere",value:function(t){return t.intersectsPlane(this)}},{key:"equals",value:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}]),t}(),F=[new s,new s,new s,new s],A=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s;e(this,t),this.origin=i,this.direction=n}return n(t,[{key:"set",value:function(t,i){return this.origin.copy(t),this.direction.copy(i),this}},{key:"copy",value:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"at",value:function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s).copy(this.direction).multiplyScalar(t).add(this.origin)}},{key:"lookAt",value:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this}},{key:"recast",value:function(t){return this.origin.copy(this.at(t,F[0])),this}},{key:"closestPointToPoint",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s,e=i.subVectors(t,this.origin).dot(this.direction);return e>=0?i.copy(this.direction).multiplyScalar(e).add(this.origin):i.copy(this.origin)}},{key:"distanceSquaredToPoint",value:function(t){var i=F[0].subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):F[0].copy(this.direction).multiplyScalar(i).add(this.origin).distanceToSquared(t)}},{key:"distanceToPoint",value:function(t){return Math.sqrt(this.distanceSquaredToPoint(t))}},{key:"distanceToPlane",value:function(t){var i=t.normal.dot(this.direction),e=0!==i?-(this.origin.dot(t.normal)+t.constant)/i:0===t.distanceToPoint(this.origin)?0:-1;return e>=0?e:null}},{key:"distanceSquaredToSegment",value:function(t,i,e,n){var s=F[0].copy(t).add(i).multiplyScalar(.5),h=F[1].copy(i).sub(t).normalize(),r=F[2].copy(this.origin).sub(s),a=.5*t.distanceTo(i),u=-this.direction.dot(h),o=r.dot(this.direction),l=-r.dot(h),y=r.lengthSq(),c=Math.abs(1-u*u),v=void 0,x=void 0,m=void 0,d=void 0,f=void 0;return c>0?(x=u*o-l,m=a*c,(v=u*l-o)>=0?x>=-m?x<=m?f=(v*=d=1/c)*(v+u*(x*=d)+2*o)+x*(u*v+x+2*l)+y:(x=a,f=-(v=Math.max(0,-(u*x+o)))*v+x*(x+2*l)+y):(x=-a,f=-(v=Math.max(0,-(u*x+o)))*v+x*(x+2*l)+y):x<=-m?f=-(v=Math.max(0,-(-u*a+o)))*v+(x=v>0?-a:Math.min(Math.max(-a,-l),a))*(x+2*l)+y:x<=m?(v=0,f=(x=Math.min(Math.max(-a,-l),a))*(x+2*l)+y):f=-(v=Math.max(0,-(u*a+o)))*v+(x=v>0?a:Math.min(Math.max(-a,-l),a))*(x+2*l)+y):(x=u>0?-a:a,f=-(v=Math.max(0,-(u*x+o)))*v+x*(x+2*l)+y),void 0!==e&&e.copy(this.direction).multiplyScalar(v).add(this.origin),void 0!==n&&n.copy(h).multiplyScalar(x).add(s),f}},{key:"intersectSphere",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s,e=F[0].subVectors(t.center,this.origin),n=e.dot(this.direction),h=e.dot(e)-n*n,r=t.radius*t.radius,a=null,u=void 0,o=void 0,l=void 0;return h<=r&&(l=n+(u=Math.sqrt(r-h)),((o=n-u)>=0||l>=0)&&(a=o<0?this.at(l,i):this.at(o,i))),a}},{key:"intersectsSphere",value:function(t){return this.distanceToPoint(t.center)<=t.radius}},{key:"intersectPlane",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s,e=this.distanceToPlane(t);return null===e?null:this.at(e,i)}},{key:"intersectsPlane",value:function(t){var i=t.distanceToPoint(this.origin);return 0===i||t.normal.dot(this.direction)*i<0}},{key:"intersectBox",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new s,e=this.origin,n=this.direction,h=t.min,r=t.max,a=1/n.x,u=1/n.y,o=1/n.z,l=null,y=void 0,c=void 0,v=void 0,x=void 0,m=void 0,d=void 0;return a>=0?(y=(h.x-e.x)*a,c=(r.x-e.x)*a):(y=(r.x-e.x)*a,c=(h.x-e.x)*a),u>=0?(v=(h.y-e.y)*u,x=(r.y-e.y)*u):(v=(r.y-e.y)*u,x=(h.y-e.y)*u),y<=x&&v<=c&&((v>y||y!==y)&&(y=v),(x<c||c!==c)&&(c=x),o>=0?(m=(h.z-e.z)*o,d=(r.z-e.z)*o):(m=(r.z-e.z)*o,d=(h.z-e.z)*o),y<=d&&m<=c&&((m>y||y!==y)&&(y=m),(d<c||c!==c)&&(c=d),c>=0&&(l=this.at(y>=0?y:c,i)))),l}},{key:"intersectsBox",value:function(t){return null!==this.intersectBox(t,F[0])}},{key:"intersectTriangle",value:function(t,i,e,n,s){var h=this.direction,r=F[0],a=F[1],u=F[2],o=F[3],l=null,y=void 0,c=void 0,v=void 0,x=void 0,m=void 0;return a.subVectors(i,t),u.subVectors(e,t),o.crossVectors(a,u),0===(y=h.dot(o))||n&&y>0||(y>0?c=1:(c=-1,y=-y),r.subVectors(this.origin,t),(v=c*h.dot(u.crossVectors(r,u)))>=0&&(x=c*h.dot(a.cross(r)))>=0&&v+x<=y&&(m=-c*r.dot(o))>=0&&(l=this.at(m/y,s))),l}},{key:"applyMatrix4",value:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}},{key:"equals",value:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}]),t}(),X=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;e(this,t),this.radius=i,this.phi=n,this.theta=s}return n(t,[{key:"set",value:function(t,i,e){return this.radius=t,this.phi=i,this.theta=e,this}},{key:"copy",value:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"setFromVector3",value:function(t){return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(Math.min(Math.max(t.y/this.radius,-1),1))),this.makeSafe()}},{key:"makeSafe",value:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}}]),t}(),Y=function(){function t(){e(this,t),this.elements=new Float32Array([1,0,0,1,0,1])}return n(t,[{key:"set",value:function(t,i,e,n,s,h){var r=this.elements;return r[0]=t,r[1]=i,r[3]=n,r[2]=e,r[4]=s,r[5]=h,this}},{key:"identity",value:function(){return this.set(1,0,0,1,0,1),this}},{key:"copy",value:function(t){var i=t.elements;return this.set(i[0],i[1],i[2],i[3],i[4],i[5]),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toMatrix3",value:function(t){var i=t.elements;t.set(i[0],i[1],i[2],i[1],i[3],i[4],i[2],i[4],i[5])}},{key:"add",value:function(t){var i=this.elements,e=t.elements;return i[0]+=e[0],i[1]+=e[1],i[3]+=e[3],i[2]+=e[2],i[4]+=e[4],i[5]+=e[5],this}},{key:"norm",value:function(){var t=this.elements,i=t[1]*t[1],e=t[2]*t[2],n=t[4]*t[4];return Math.sqrt(t[0]*t[0]+i+e+i+t[3]*t[3]+n+e+n+t[5]*t[5])}},{key:"off",value:function(){var t=this.elements;return Math.sqrt(2*(t[1]*t[1]+t[2]*t[2]+t[4]*t[4]))}},{key:"applyToVector3",value:function(t){var i=t.x,e=t.y,n=t.z,s=this.elements;return t.x=s[0]*i+s[1]*e+s[2]*n,t.y=s[1]*i+s[3]*e+s[4]*n,t.z=s[2]*i+s[4]*e+s[5]*n,t}},{key:"equals",value:function(t){var i=this.elements,e=t.elements,n=!0,s=void 0;for(s=0;n&&s<6;++s)i[s]!==e[s]&&(n=!1);return n}}],[{key:"calculateIndex",value:function(t,i){return 3-(3-t)*(2-t)/2+i}}]),t}(),Z=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;e(this,t),this.x=i,this.y=n,this.z=s,this.w=h}return n(t,[{key:"set",value:function(t,i,e,n){return this.x=t,this.y=i,this.z=e,this.w=n,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.w=t[i+3],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.w,t}},{key:"setAxisAngleFromQuaternion",value:function(t){this.w=2*Math.acos(t.w);var i=Math.sqrt(1-t.w*t.w);return i<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/i,this.y=t.y/i,this.z=t.z/i),this}},{key:"setAxisAngleFromRotationMatrix",value:function(t){var i=.01,e=t.elements,n=e[0],s=e[4],h=e[8],r=e[1],a=e[5],u=e[9],o=e[2],l=e[6],y=e[10],c=void 0,v=void 0,x=void 0,m=void 0,d=void 0,f=void 0,k=void 0,z=void 0,M=void 0,p=void 0,w=void 0;return Math.abs(s-r)<i&&Math.abs(h-o)<i&&Math.abs(u-l)<i?Math.abs(s+r)<.1&&Math.abs(h+o)<.1&&Math.abs(u+l)<.1&&Math.abs(n+a+y-3)<.1?this.set(1,0,0,0):(c=Math.PI,k=(y+1)/2,z=(s+r)/4,M=(h+o)/4,p=(u+l)/4,(d=(n+1)/2)>(f=(a+1)/2)&&d>k?d<i?(v=0,x=.707106781,m=.707106781):(x=z/(v=Math.sqrt(d)),m=M/v):f>k?f<i?(v=.707106781,x=0,m=.707106781):(v=z/(x=Math.sqrt(f)),m=p/x):k<i?(v=.707106781,x=.707106781,m=0):(v=M/(m=Math.sqrt(k)),x=p/m),this.set(v,x,m,c)):(w=Math.sqrt((l-u)*(l-u)+(h-o)*(h-o)+(r-s)*(r-s)),Math.abs(w)<.001&&(w=1),this.x=(l-u)/w,this.y=(h-o)/w,this.z=(r-s)/w,this.w=Math.acos((n+a+y-1)/2)),this}},{key:"add",value:function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}},{key:"addScalar",value:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}},{key:"addVectors",value:function(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this.w=t.w+i.w,this}},{key:"addScaledVector",value:function(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this.w+=t.w*i,this}},{key:"sub",value:function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}},{key:"subScalar",value:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}},{key:"subVectors",value:function(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this.w=t.w-i.w,this}},{key:"multiply",value:function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}},{key:"multiplyScalar",value:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}},{key:"multiplyVectors",value:function(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this.w=t.w*i.w,this}},{key:"divide",value:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}},{key:"divideScalar",value:function(t){return this.x/=t,this.y/=t,this.z/=t,this.w/=t,this}},{key:"applyMatrix4",value:function(t){var i=this.x,e=this.y,n=this.z,s=this.w,h=t.elements;return this.x=h[0]*i+h[4]*e+h[8]*n+h[12]*s,this.y=h[1]*i+h[5]*e+h[9]*n+h[13]*s,this.z=h[2]*i+h[6]*e+h[10]*n+h[14]*s,this.w=h[3]*i+h[7]*e+h[11]*n+h[15]*s,this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}},{key:"lengthManhattan",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"distanceToManhattan",value:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)+Math.abs(this.w-t.w)}},{key:"distanceToSquared",value:function(t){var i=this.x-t.x,e=this.y-t.y,n=this.z-t.z,s=this.w-t.w;return i*i+e*e+n*n+s*s}},{key:"distanceTo",value:function(t){return Math.sqrt(this.distanceToSquared(t))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(t){return this.normalize().multiplyScalar(t)}},{key:"min",value:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}},{key:"max",value:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}},{key:"clamp",value:function(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this.w=Math.max(t.w,Math.min(i.w,this.w)),this}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}},{key:"lerp",value:function(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this.w+=(t.w-this.w)*i,this}},{key:"lerpVectors",value:function(t,i,e){return this.subVectors(i,t).multiplyScalar(e).add(t)}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}}]),t}();t.Box2=y,t.Box3=r,t.Cylindrical=c,t.Euler=z,t.Line3=w,t.Matrix3=v,t.Matrix4=q,t.Plane=V,t.Quaternion=d,t.RotationOrder=x,t.Ray=A,t.Sphere=u,t.Spherical=X,t.SymmetricMatrix3=Y,t.Vector2=o,t.Vector3=s,t.Vector4=Z,Object.defineProperty(t,"__esModule",{value:!0})});