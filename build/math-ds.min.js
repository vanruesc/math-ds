/**
 * math-ds v1.0.1 build Sun Jul 01 2018
 * https://github.com/vanruesc/math-ds
 * Copyright 2018 Raoul van RÃ¼schen, Zlib
 */
(function(e,a){'object'==typeof exports&&'undefined'!=typeof module?a(exports):'function'==typeof define&&define.amd?define(['exports'],a):a(e.MATHDS={})})(this,function(e){'use strict';function t(e,a,t){return x(s(e,t),a)}var l=Math.PI,n=Math.atan2,y=Math.round,o=Math.ceil,r=Math.floor,i=Math.abs,u=Math.acos,s=Math.min,x=Math.max,k=Math.sqrt,p=Math.cos,g=Math.sin,d=function(e,a){if(!(e instanceof a))throw new TypeError('Cannot call a class as a function')},z=function(){function e(e,a){for(var t,y=0;y<a.length;y++)t=a[y],t.enumerable=t.enumerable||!1,t.configurable=!0,'value'in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}return function(a,t,y){return t&&e(a.prototype,t),y&&e(a,y),a}}(),h=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;d(this,e),this.x=a,this.y=t,this.z=y}return z(e,[{key:'set',value:function(e,a,t){return this.x=e,this.y=a,this.z=t,this}},{key:'copy',value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}},{key:'clone',value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:'fromArray',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this.z=e[a+2],this}},{key:'toArray',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e[a+2]=this.z,e}},{key:'setFromSpherical',value:function(e){var a=g(e.phi)*e.radius;return this.x=a*g(e.theta),this.y=p(e.phi)*e.radius,this.z=a*p(e.theta),this}},{key:'setFromCylindrical',value:function(e){return this.x=e.radius*g(e.theta),this.y=e.y,this.z=e.radius*p(e.theta),this}},{key:'setFromMatrixColumn',value:function(e,a){return this.fromArray(e.elements,4*a)}},{key:'setFromMatrixPosition',value:function(e){var a=e.elements;return this.x=a[12],this.y=a[13],this.z=a[14],this}},{key:'setFromMatrixScale',value:function(e){var a=this.setFromMatrixColumn(e,0).length(),t=this.setFromMatrixColumn(e,1).length(),y=this.setFromMatrixColumn(e,2).length();return this.x=a,this.y=t,this.z=y,this}},{key:'add',value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}},{key:'addScalar',value:function(e){return this.x+=e,this.y+=e,this.z+=e,this}},{key:'addVectors',value:function(e,a){return this.x=e.x+a.x,this.y=e.y+a.y,this.z=e.z+a.z,this}},{key:'addScaledVector',value:function(e,a){return this.x+=e.x*a,this.y+=e.y*a,this.z+=e.z*a,this}},{key:'sub',value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}},{key:'subScalar',value:function(e){return this.x-=e,this.y-=e,this.z-=e,this}},{key:'subVectors',value:function(e,a){return this.x=e.x-a.x,this.y=e.y-a.y,this.z=e.z-a.z,this}},{key:'multiply',value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}},{key:'multiplyScalar',value:function(e){return this.x*=e,this.y*=e,this.z*=e,this}},{key:'multiplyVectors',value:function(e,a){return this.x=e.x*a.x,this.y=e.y*a.y,this.z=e.z*a.z,this}},{key:'divide',value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}},{key:'divideScalar',value:function(e){return this.x/=e,this.y/=e,this.z/=e,this}},{key:'crossVectors',value:function(e,a){var t=e.x,y=e.y,l=e.z,n=a.x,o=a.y,r=a.z;return this.x=y*r-l*o,this.y=l*n-t*r,this.z=t*o-y*n,this}},{key:'cross',value:function(e){return this.crossVectors(this,e)}},{key:'transformDirection',value:function(a){var t=this.x,l=this.y,y=this.z,n=a.elements;return this.x=n[0]*t+n[4]*l+n[8]*y,this.y=n[1]*t+n[5]*l+n[9]*y,this.z=n[2]*t+n[6]*l+n[10]*y,this.normalize()}},{key:'applyMatrix3',value:function(a){var t=this.x,l=this.y,y=this.z,n=a.elements;return this.x=n[0]*t+n[3]*l+n[6]*y,this.y=n[1]*t+n[4]*l+n[7]*y,this.z=n[2]*t+n[5]*l+n[8]*y,this}},{key:'applyMatrix4',value:function(a){var t=this.x,l=this.y,y=this.z,n=a.elements;return this.x=n[0]*t+n[4]*l+n[8]*y+n[12],this.y=n[1]*t+n[5]*l+n[9]*y+n[13],this.z=n[2]*t+n[6]*l+n[10]*y+n[14],this}},{key:'applyQuaternion',value:function(e){var a=this.x,t=this.y,y=this.z,l=e.x,n=e.y,o=e.z,r=e.w,i=r*a+n*y-o*t,s=r*t+o*a-l*y,u=r*y+l*t-n*a,x=-l*a-n*t-o*y;return this.x=i*r+x*-l+s*-o-u*-n,this.y=s*r+x*-n+u*-l-i*-o,this.z=u*r+x*-o+i*-n-s*-l,this}},{key:'negate',value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:'dot',value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z}},{key:'reflect',value:function(e){var a=e.x,t=e.y,y=e.z;return this.sub(e.multiplyScalar(2*this.dot(e))),e.set(a,t,y),this}},{key:'angleTo',value:function(e){var a=this.dot(e)/k(this.lengthSquared()*e.lengthSquared());return u(s(x(a,-1),1))}},{key:'manhattanLength',value:function(){return i(this.x)+i(this.y)+i(this.z)}},{key:'lengthSquared',value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:'length',value:function(){return k(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:'manhattanDistanceTo',value:function(e){return i(this.x-e.x)+i(this.y-e.y)+i(this.z-e.z)}},{key:'distanceToSquared',value:function(e){var a=this.x-e.x,t=this.y-e.y,y=this.z-e.z;return a*a+t*t+y*y}},{key:'distanceTo',value:function(e){return k(this.distanceToSquared(e))}},{key:'normalize',value:function(){return this.divideScalar(this.length())}},{key:'setLength',value:function(e){return this.normalize().multiplyScalar(e)}},{key:'min',value:function(e){return this.x=s(this.x,e.x),this.y=s(this.y,e.y),this.z=s(this.z,e.z),this}},{key:'max',value:function(e){return this.x=x(this.x,e.x),this.y=x(this.y,e.y),this.z=x(this.z,e.z),this}},{key:'clamp',value:function(e,a){return this.x=x(e.x,s(a.x,this.x)),this.y=x(e.y,s(a.y,this.y)),this.z=x(e.z,s(a.z,this.z)),this}},{key:'floor',value:function(){return this.x=r(this.x),this.y=r(this.y),this.z=r(this.z),this}},{key:'ceil',value:function(){return this.x=o(this.x),this.y=o(this.y),this.z=o(this.z),this}},{key:'round',value:function(){return this.x=y(this.x),this.y=y(this.y),this.z=y(this.z),this}},{key:'lerp',value:function(e,a){return this.x+=(e.x-this.x)*a,this.y+=(e.y-this.y)*a,this.z+=(e.z-this.z)*a,this}},{key:'lerpVectors',value:function(e,a,t){return this.subVectors(a,e).multiplyScalar(t).add(e)}},{key:'equals',value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}}]),e}(),w=new h,v=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h(1/0,1/0,1/0),t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h(-Infinity,-Infinity,-Infinity);d(this,e),this.min=a,this.max=t}return z(e,[{key:'set',value:function(e,a){return this.min.copy(e),this.max.copy(a),this}},{key:'copy',value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'makeEmpty',value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-Infinity,this}},{key:'isEmpty',value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:'getCenter',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:'getSize',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}},{key:'setFromSphere',value:function(e){return this.set(e.center,e.center),this.expandByScalar(e.radius),this}},{key:'expandByPoint',value:function(e){return this.min.min(e),this.max.max(e),this}},{key:'expandByVector',value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:'expandByScalar',value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:'setFromPoints',value:function(e){var a,t;for(this.min.set(0,0,0),this.max.set(0,0,0),(a=0,t=e.length);a<t;++a)this.expandByPoint(e[a]);return this}},{key:'setFromCenterAndSize',value:function(e,a){var t=w.copy(a).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}},{key:'clampPoint',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h;return a.copy(e).clamp(this.min,this.max)}},{key:'distanceToPoint',value:function(e){var a=w.copy(e).clamp(this.min,this.max);return a.sub(e).length()}},{key:'applyMatrix4',value:function(e){var a=this.min,t=this.max;if(!this.isEmpty()){var y=e.elements,l=y[0]*a.x,n=y[1]*a.x,o=y[2]*a.x,r=y[0]*t.x,i=y[1]*t.x,u=y[2]*t.x,m=y[4]*a.y,c=y[5]*a.y,k=y[6]*a.y,v=y[4]*t.y,d=y[5]*t.y,z=y[6]*t.y,p=y[8]*a.z,g=y[9]*a.z,h=y[10]*a.z,w=y[8]*t.z,S=y[9]*t.z,P=y[10]*t.z;a.x=s(l,r)+s(m,v)+s(p,w)+y[12],a.y=s(n,i)+s(c,d)+s(g,S)+y[13],a.z=s(o,u)+s(k,z)+s(h,P)+y[14],t.x=x(l,r)+x(m,v)+x(p,w)+y[12],t.y=x(n,i)+x(c,d)+x(g,S)+y[13],t.z=x(o,u)+x(k,z)+x(h,P)+y[14]}return this}},{key:'translate',value:function(e){return this.min.add(e),this.max.add(e),this}},{key:'intersect',value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:'union',value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:'containsPoint',value:function(e){var a=this.min,t=this.max;return e.x>=a.x&&e.y>=a.y&&e.z>=a.z&&e.x<=t.x&&e.y<=t.y&&e.z<=t.z}},{key:'containsBox',value:function(e){var a=this.min,t=this.max,y=e.min,l=e.max;return a.x<=y.x&&l.x<=t.x&&a.y<=y.y&&l.y<=t.y&&a.z<=y.z&&l.z<=t.z}},{key:'intersectsBox',value:function(e){var a=this.min,t=this.max,y=e.min,l=e.max;return l.x>=a.x&&l.y>=a.y&&l.z>=a.z&&y.x<=t.x&&y.y<=t.y&&y.z<=t.z}},{key:'intersectsSphere',value:function(e){var a=this.clampPoint(e.center,w);return a.distanceToSquared(e.center)<=e.radius*e.radius}},{key:'intersectsPlane',value:function(e){var a,t;return 0<e.normal.x?(a=e.normal.x*this.min.x,t=e.normal.x*this.max.x):(a=e.normal.x*this.max.x,t=e.normal.x*this.min.x),0<e.normal.y?(a+=e.normal.y*this.min.y,t+=e.normal.y*this.max.y):(a+=e.normal.y*this.max.y,t+=e.normal.y*this.min.y),0<e.normal.z?(a+=e.normal.z*this.min.z,t+=e.normal.z*this.max.z):(a+=e.normal.z*this.max.z,t+=e.normal.z*this.min.z),a<=e.constant&&t>=e.constant}},{key:'equals',value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),S=new v,P=new h,f=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;d(this,e),this.center=a,this.radius=t}return z(e,[{key:'set',value:function(e,a){return this.center.copy(e),this.radius=a,this}},{key:'copy',value:function(e){return this.center.copy(e.center),this.radius=e.radius,this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'setFromPoints',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:S.setFromPoints(e).getCenter(this.center),t=0,y=void 0,n=void 0;for(y=0,n=e.length;y<n;++y)t=x(t,a.distanceToSquared(e[y]));return this.radius=k(t),this}},{key:'setFromBox',value:function(e){return e.getCenter(this.center),this.radius=.5*e.getSize(P).length(),this}},{key:'isEmpty',value:function(){return 0>=this.radius}},{key:'translate',value:function(e){return this.center.add(e),this}},{key:'clampPoint',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h,t=this.center.distanceToSquared(e);return a.copy(e),t>this.radius*this.radius&&(a.sub(this.center).normalize(),a.multiplyScalar(this.radius).add(this.center)),a}},{key:'distanceToPoint',value:function(e){return e.distanceTo(this.center)-this.radius}},{key:'containsPoint',value:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}},{key:'intersectsSphere',value:function(e){var a=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=a*a}},{key:'intersectsBox',value:function(e){return e.intersectsSphere(this)}},{key:'intersectsPlane',value:function(e){return i(e.distanceToPoint(this.center))<=this.radius}},{key:'equals',value:function(e){return e.center.equals(this.center)&&e.radius===this.radius}}]),e}(),T=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;d(this,e),this.x=a,this.y=t}return z(e,[{key:'set',value:function(e,a){return this.x=e,this.y=a,this}},{key:'copy',value:function(e){return this.x=e.x,this.y=e.y,this}},{key:'clone',value:function(){return new this.constructor(this.x,this.y)}},{key:'fromArray',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this}},{key:'toArray',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e}},{key:'add',value:function(e){return this.x+=e.x,this.y+=e.y,this}},{key:'addScalar',value:function(e){return this.x+=e,this.y+=e,this}},{key:'addVectors',value:function(e,a){return this.x=e.x+a.x,this.y=e.y+a.y,this}},{key:'addScaledVector',value:function(e,a){return this.x+=e.x*a,this.y+=e.y*a,this}},{key:'sub',value:function(e){return this.x-=e.x,this.y-=e.y,this}},{key:'subScalar',value:function(e){return this.x-=e,this.y-=e,this}},{key:'subVectors',value:function(e,a){return this.x=e.x-a.x,this.y=e.y-a.y,this}},{key:'multiply',value:function(e){return this.x*=e.x,this.y*=e.y,this}},{key:'multiplyScalar',value:function(e){return this.x*=e,this.y*=e,this}},{key:'divide',value:function(e){return this.x/=e.x,this.y/=e.y,this}},{key:'divideScalar',value:function(e){return this.x/=e,this.y/=e,this}},{key:'applyMatrix3',value:function(a){var t=this.x,l=this.y,y=a.elements;return this.x=y[0]*t+y[3]*l+y[6],this.y=y[1]*t+y[4]*l+y[7],this}},{key:'dot',value:function(e){return this.x*e.x+this.y*e.y}},{key:'manhattanLength',value:function(){return i(this.x)+i(this.y)}},{key:'lengthSquared',value:function(){return this.x*this.x+this.y*this.y}},{key:'length',value:function(){return k(this.x*this.x+this.y*this.y)}},{key:'manhattanDistanceTo',value:function(e){return i(this.x-e.x)+i(this.y-e.y)}},{key:'distanceToSquared',value:function(e){var a=this.x-e.x,t=this.y-e.y;return a*a+t*t}},{key:'distanceTo',value:function(e){return k(this.distanceToSquared(e))}},{key:'normalize',value:function(){return this.divideScalar(this.length())}},{key:'setLength',value:function(e){return this.normalize().multiplyScalar(e)}},{key:'min',value:function(e){return this.x=s(this.x,e.x),this.y=s(this.y,e.y),this}},{key:'max',value:function(e){return this.x=x(this.x,e.x),this.y=x(this.y,e.y),this}},{key:'clamp',value:function(e,a){return this.x=x(e.x,s(a.x,this.x)),this.y=x(e.y,s(a.y,this.y)),this}},{key:'floor',value:function(){return this.x=r(this.x),this.y=r(this.y),this}},{key:'ceil',value:function(){return this.x=o(this.x),this.y=o(this.y),this}},{key:'round',value:function(){return this.x=y(this.x),this.y=y(this.y),this}},{key:'negate',value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:'angle',value:function(){var e=n(this.y,this.x);return 0>e&&(e+=2*l),e}},{key:'lerp',value:function(e,a){return this.x+=(e.x-this.x)*a,this.y+=(e.y-this.y)*a,this}},{key:'lerpVectors',value:function(e,a,t){return this.subVectors(a,e).multiplyScalar(t).add(e)}},{key:'rotateAround',value:function(e,a){var t=p(a),l=g(a),n=this.x-e.x,o=this.y-e.y;return this.x=n*t-o*l+e.x,this.y=n*l+o*t+e.y,this}},{key:'equals',value:function(e){return e.x===this.x&&e.y===this.y}},{key:'width',get:function(){return this.x},set:function(e){return this.x=e}},{key:'height',get:function(){return this.y},set:function(e){return this.y=e}}]),e}(),V=new T,F=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new T(1/0,1/0),t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new T(-Infinity,-Infinity);d(this,e),this.min=a,this.max=t}return z(e,[{key:'set',value:function(e,a){return this.min.copy(e),this.max.copy(a),this}},{key:'copy',value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'makeEmpty',value:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-Infinity,this}},{key:'isEmpty',value:function(){return this.max.x<this.min.x||this.max.y<this.min.y}},{key:'getCenter',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new T;return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:'getSize',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new T;return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}},{key:'getBoundingSphere',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new f;return this.getCenter(e.center),e.radius=.5*this.getSize(V).length(),e}},{key:'expandByPoint',value:function(e){return this.min.min(e),this.max.max(e),this}},{key:'expandByVector',value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:'expandByScalar',value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:'setFromPoints',value:function(e){var a,t;for(this.min.set(0,0),this.max.set(0,0),(a=0,t=e.length);a<t;++a)this.expandByPoint(e[a]);return this}},{key:'setFromCenterAndSize',value:function(e,a){var t=V.copy(a).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}},{key:'clampPoint',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new T;return a.copy(e).clamp(this.min,this.max)}},{key:'distanceToPoint',value:function(e){var a=V.copy(e).clamp(this.min,this.max);return a.sub(e).length()}},{key:'translate',value:function(e){return this.min.add(e),this.max.add(e),this}},{key:'intersect',value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:'union',value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:'containsPoint',value:function(e){var a=this.min,t=this.max;return e.x>=a.x&&e.y>=a.y&&e.x<=t.x&&e.y<=t.y}},{key:'containsBox',value:function(e){var a=this.min,t=this.max,y=e.min,l=e.max;return a.x<=y.x&&l.x<=t.x&&a.y<=y.y&&l.y<=t.y}},{key:'intersectsBox',value:function(e){var a=this.min,t=this.max,y=e.min,l=e.max;return l.x>=a.x&&l.y>=a.y&&y.x<=t.x&&y.y<=t.y}},{key:'equals',value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),M=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,l=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;d(this,e),this.radius=a,this.theta=t,this.y=l}return z(e,[{key:'set',value:function(e,a,t){return this.radius=e,this.theta=a,this.y=t,this}},{key:'copy',value:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'setFromVector3',value:function(e){return this.radius=k(e.x*e.x+e.z*e.z),this.theta=n(e.x,e.z),this.y=e.y,this}}]),e}(),C=function(){function e(){d(this,e),this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}return z(e,[{key:'set',value:function(e,a,t,y,l,n,o,r,i){var s=this.elements;return s[0]=e,s[3]=a,s[6]=t,s[1]=y,s[4]=l,s[7]=n,s[2]=o,s[5]=r,s[8]=i,this}},{key:'identity',value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:'copy',value:function(e){var a=e.elements,t=this.elements;return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],this}},{key:'clone',value:function(){return new this.constructor().fromArray(this.elements)}},{key:'fromArray',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,t=this.elements,y=void 0;for(y=0;9>y;++y)t[y]=e[y+a];return this}},{key:'toArray',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,t=this.elements,y=void 0;for(y=0;9>y;++y)e[y+a]=t[y];return e}},{key:'multiplyMatrices',value:function(e,a){var t=e.elements,y=a.elements,l=this.elements,n=t[0],o=t[3],r=t[6],i=t[1],s=t[4],u=t[7],x=t[2],m=t[5],c=t[8],k=y[0],v=y[3],d=y[6],z=y[1],p=y[4],g=y[7],h=y[2],w=y[5],S=y[8];return l[0]=n*k+o*z+r*h,l[3]=n*v+o*p+r*w,l[6]=n*d+o*g+r*S,l[1]=i*k+s*z+u*h,l[4]=i*v+s*p+u*w,l[7]=i*d+s*g+u*S,l[2]=x*k+m*z+c*h,l[5]=x*v+m*p+c*w,l[8]=x*d+m*g+c*S,this}},{key:'multiply',value:function(e){return this.multiplyMatrices(this,e)}},{key:'premultiply',value:function(e){return this.multiplyMatrices(e,this)}},{key:'multiplyScalar',value:function(e){var a=this.elements;return a[0]*=e,a[3]*=e,a[6]*=e,a[1]*=e,a[4]*=e,a[7]*=e,a[2]*=e,a[5]*=e,a[8]*=e,this}},{key:'determinant',value:function(){var t=this.elements,y=t[0],a=t[1],l=t[2],n=t[3],o=t[4],e=t[5],r=t[6],s=t[7],u=t[8];return y*o*u-y*e*s-a*n*u+a*e*r+l*n*s-l*o*r}},{key:'getInverse',value:function(e){var a=e.elements,t=this.elements,y=a[0],l=a[1],n=a[2],o=a[3],r=a[4],i=a[5],s=a[6],u=a[7],x=a[8],m=x*r-i*u,c=i*s-x*o,k=u*o-r*s,v=y*m+l*c+n*k,d=void 0;return 0==v?(console.error('Can\'t invert matrix, determinant is zero',e),this.identity()):(d=1/v,t[0]=m*d,t[1]=(n*u-x*l)*d,t[2]=(i*l-n*r)*d,t[3]=c*d,t[4]=(x*y-n*s)*d,t[5]=(n*o-i*y)*d,t[6]=k*d,t[7]=(l*s-u*y)*d,t[8]=(r*y-l*o)*d),this}},{key:'transpose',value:function(){var e=this.elements,a=void 0;return a=e[1],e[1]=e[3],e[3]=a,a=e[2],e[2]=e[6],e[6]=a,a=e[5],e[5]=e[7],e[7]=a,this}},{key:'scale',value:function(e,a){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=a,t[4]*=a,t[7]*=a,this}},{key:'rotate',value:function(e){var a=p(e),t=g(e),y=this.elements,l=y[0],n=y[3],o=y[6],r=y[1],i=y[4],s=y[7];return y[0]=a*l+t*r,y[3]=a*n+t*i,y[6]=a*o+t*s,y[1]=-t*l+a*r,y[4]=-t*n+a*i,y[7]=-t*o+a*s,this}},{key:'translate',value:function(e,a){var t=this.elements;return t[0]+=e*t[2],t[3]+=e*t[5],t[6]+=e*t[8],t[1]+=a*t[2],t[4]+=a*t[5],t[7]+=a*t[8],this}},{key:'equals',value:function(e){var a=this.elements,t=e.elements,y=!0,l=void 0;for(l=0;y&&9>l;++l)a[l]!==t[l]&&(y=!1);return y}}]),e}(),A={XYZ:'XYZ',YZX:'YZX',ZXY:'ZXY',XZY:'XZY',YXZ:'YXZ',ZYX:'ZYX'},X=new h,Y=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,l=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0;d(this,e),this.x=a,this.y=t,this.z=y,this.w=l}var a=Number.EPSILON;return z(e,[{key:'set',value:function(e,a,t,y){return this.x=e,this.y=a,this.z=t,this.w=y,this}},{key:'copy',value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}},{key:'clone',value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:'fromArray',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this.z=e[a+2],this.w=e[a+3],this}},{key:'toArray',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e[a+2]=this.z,e[a+3]=this.w,e}},{key:'setFromEuler',value:function(e){var a=e.x,t=e.y,y=e.z,l=p,n=g,o=l(a/2),r=l(t/2),i=l(y/2),s=n(a/2),u=n(t/2),x=n(y/2);switch(e.order){case A.XYZ:this.x=s*r*i+o*u*x,this.y=o*u*i-s*r*x,this.z=o*r*x+s*u*i,this.w=o*r*i-s*u*x;break;case A.YXZ:this.x=s*r*i+o*u*x,this.y=o*u*i-s*r*x,this.z=o*r*x-s*u*i,this.w=o*r*i+s*u*x;break;case A.ZXY:this.x=s*r*i-o*u*x,this.y=o*u*i+s*r*x,this.z=o*r*x+s*u*i,this.w=o*r*i-s*u*x;break;case A.ZYX:this.x=s*r*i-o*u*x,this.y=o*u*i+s*r*x,this.z=o*r*x-s*u*i,this.w=o*r*i+s*u*x;break;case A.YZX:this.x=s*r*i+o*u*x,this.y=o*u*i+s*r*x,this.z=o*r*x-s*u*i,this.w=o*r*i-s*u*x;break;case A.XZY:this.x=s*r*i-o*u*x,this.y=o*u*i-s*r*x,this.z=o*r*x+s*u*i,this.w=o*r*i+s*u*x;}return this}},{key:'setFromAxisAngle',value:function(e,a){var t=a/2,y=g(t);return this.x=e.x*y,this.y=e.y*y,this.z=e.z*y,this.w=p(t),this}},{key:'setFromRotationMatrix',value:function(e){var a=e.elements,t=a[0],y=a[4],l=a[8],n=a[1],o=a[5],r=a[9],i=a[2],u=a[6],x=a[10],m=t+o+x,c=void 0;return 0<m?(c=.5/k(m+1),this.w=.25/c,this.x=(u-r)*c,this.y=(l-i)*c,this.z=(n-y)*c):t>o&&t>x?(c=2*k(1+t-o-x),this.w=(u-r)/c,this.x=.25*c,this.y=(y+n)/c,this.z=(l+i)/c):o>x?(c=2*k(1+o-t-x),this.w=(l-i)/c,this.x=(y+n)/c,this.y=.25*c,this.z=(r+u)/c):(c=2*k(1+x-t-o),this.w=(n-y)/c,this.x=(l+i)/c,this.y=(r+u)/c,this.z=.25*c),this}},{key:'setFromUnitVectors',value:function(e,a){var t=e.dot(a)+1;return 1e-6>t?(t=0,i(e.x)>i(e.z)?X.set(-e.y,e.x,0):X.set(0,-e.z,e.y)):X.crossVectors(e,a),this.x=X.x,this.y=X.y,this.z=X.z,this.w=t,this.normalize()}},{key:'invert',value:function(){return this.conjugate()}},{key:'conjugate',value:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this}},{key:'lengthSquared',value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:'length',value:function(){return k(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:'normalize',value:function(){var e=this.length(),a=void 0;return 0===e?(this.x=0,this.y=0,this.z=0,this.w=1):(a=1/e,this.x*=a,this.y*=a,this.z*=a,this.w*=a),this}},{key:'dot',value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:'multiplyQuaternions',value:function(e,a){var t=e.x,y=e.y,l=e.z,n=e.w,o=a.x,r=a.y,i=a.z,s=a.w;return this.x=t*s+n*o+y*i-l*r,this.y=y*s+n*r+l*o-t*i,this.z=l*s+n*i+t*r-y*o,this.w=n*s-t*o-y*r-l*i,this}},{key:'multiply',value:function(e){return this.multiplyQuaternions(this,e)}},{key:'premultiply',value:function(e){return this.multiplyQuaternions(e,this)}},{key:'slerp',value:function(e,l){var t=this.x,o=this.y,y=this.z,r=this.w,i=void 0,u=void 0,x=void 0,m=void 0,c=void 0,v=void 0,d=void 0;return 1===l?this.copy(e):0<l&&(i=r*e.w+t*e.x+o*e.y+y*e.z,0>i?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,i=-i):this.copy(e),1<=i?(this.w=r,this.x=t,this.y=o,this.z=y):(u=1-i*i,c=1-l,u<=a?(this.w=c*r+l*this.w,this.x=c*t+l*this.x,this.y=c*o+l*this.y,this.z=c*y+l*this.z,this.normalize()):(x=k(u),m=n(x,i),v=g(c*m)/x,d=g(l*m)/x,this.w=r*v+this.w*d,this.x=t*v+this.x*d,this.y=o*v+this.y*d,this.z=y*v+this.z*d))),this}},{key:'equals',value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}}],[{key:'slerp',value:function(e,a,y,l){return y.copy(e).slerp(a,l)}},{key:'slerpFlat',value:function(e,y,l,o,r,i,u){var x=r[i],m=r[i+1],c=r[i+2],v=r[i+3],d=l[o],z=l[o+1],p=l[o+2],h=l[o+3],w=void 0,S=void 0,P=void 0,T=void 0,V=void 0,q=void 0,F=void 0,b=void 0;(h!==v||d!==x||z!==m||p!==c)&&(w=1-u,T=d*x+z*m+p*c+h*v,q=0<=T?1:-1,V=1-T*T,V>a&&(P=k(V),F=n(P,T*q),w=g(w*F)/P,u=g(u*F)/P),b=u*q,d=d*w+x*b,z=z*w+m*b,p=p*w+c*b,h=h*w+v*b,w===1-u&&(S=1/k(d*d+z*z+p*p+h*h),d*=S,z*=S,p*=S,h*=S)),e[y]=d,e[y+1]=z,e[y+2]=p,e[y+3]=h}}]),e}(),Z=new C,m=new Y,q=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;d(this,e),this.x=a,this.y=t,this.z=y,this.order=e.defaultOrder}return z(e,[{key:'set',value:function(e,a,t,y){return this.x=e,this.y=a,this.z=t,this.order=y,this}},{key:'copy',value:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.order=a.order,this}},{key:'clone',value:function(){return new this.constructor(this.x,this.y,this.z,this.order)}},{key:'fromArray',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this.z=e[a+2],this.order=e[a+3],this}},{key:'toArray',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e[a+2]=this.z,e[a+3]=this.order,e}},{key:'toVector3',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h;return e.set(this.x,this.y,this.z)}},{key:'setFromRotationMatrix',value:function(e){var a=Math.asin,y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.order,l=e.elements,o=l[0],r=l[4],s=l[8],u=l[1],x=l[5],m=l[9],c=l[2],k=l[6],v=l[10],d=1-1e-5;switch(y){case A.XYZ:{this.y=a(t(s,-1,1)),i(s)<d?(this.x=n(-m,v),this.z=n(-r,o)):(this.x=n(k,x),this.z=0);break}case A.YXZ:{this.x=a(-t(m,-1,1)),i(m)<d?(this.y=n(s,v),this.z=n(u,x)):(this.y=n(-c,o),this.z=0);break}case A.ZXY:{this.x=a(t(k,-1,1)),i(k)<d?(this.y=n(-c,v),this.z=n(-r,x)):(this.y=0,this.z=n(u,o));break}case A.ZYX:{this.y=a(-t(c,-1,1)),i(c)<d?(this.x=n(k,v),this.z=n(u,o)):(this.x=0,this.z=n(-r,x));break}case A.YZX:{this.z=a(t(u,-1,1)),i(u)<d?(this.x=n(-m,x),this.y=n(-c,o)):(this.x=0,this.y=n(s,v));break}case A.XZY:{this.z=a(-t(r,-1,1)),i(r)<d?(this.x=n(k,x),this.y=n(s,o)):(this.x=n(-m,v),this.y=0);break}}return this.order=y,this}},{key:'setFromQuaternion',value:function(e,a){return Z.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Z,a)}},{key:'setFromVector3',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.order;return this.set(e.x,e.y,e.z,a)}},{key:'reorder',value:function(e){return m.setFromEuler(this),this.setFromQuaternion(m,e)}},{key:'equals',value:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.order===this.order}}],[{key:'defaultOrder',get:function(){return A.XYZ}}]),e}(),B=new h,a=new h,b=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h(1,0,0),t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;d(this,e),this.normal=a,this.constant=t}return z(e,[{key:'set',value:function(e,a){return this.normal.copy(e),this.constant=a,this}},{key:'setComponents',value:function(e,a,t,y){return this.normal.set(e,a,t),this.constant=y,this}},{key:'copy',value:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'setFromNormalAndCoplanarPoint',value:function(e,a){return this.normal.copy(e),this.constant=-a.dot(this.normal),this}},{key:'setFromCoplanarPoints',value:function(e,t,y){var l=B.subVectors(y,t).cross(a.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(l,B),this}},{key:'normalize',value:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}},{key:'negate',value:function(){return this.normal.negate(),this.constant=-this.constant,this}},{key:'distanceToPoint',value:function(e){return this.normal.dot(e)+this.constant}},{key:'distanceToSphere',value:function(e){return this.distanceToPoint(e.center)-e.radius}},{key:'projectPoint',value:function(e,a){return a.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}},{key:'coplanarPoint',value:function(e){return e.copy(this.normal).multiplyScalar(-this.constant)}},{key:'translate',value:function(e){return this.constant-=e.dot(this.normal),this}},{key:'intersectLine',value:function(e,a){var y=e.delta(B),l=this.normal.dot(y);if(0===l)0===this.distanceToPoint(e.start)&&a.copy(e.start);else{var n=-(e.start.dot(this.normal)+this.constant)/l;0<=n&&1>=n&&a.copy(y).multiplyScalar(n).add(e.start)}return a}},{key:'intersectsLine',value:function(e){var a=this.distanceToPoint(e.start),t=this.distanceToPoint(e.end);return 0>a&&0<t||0>t&&0<a}},{key:'intersectsBox',value:function(e){return e.intersectsPlane(this)}},{key:'intersectsSphere',value:function(e){return e.intersectsPlane(this)}},{key:'equals',value:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}]),e}(),E=new h,R=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new b,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new b,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:new b,l=3<arguments.length&&void 0!==arguments[3]?arguments[3]:new b,n=4<arguments.length&&void 0!==arguments[4]?arguments[4]:new b,o=5<arguments.length&&void 0!==arguments[5]?arguments[5]:new b;d(this,e),this.planes=[a,t,y,l,n,o]}return z(e,[{key:'set',value:function(e,a,t,y,l,n){var o=this.planes;return o[0].copy(e),o[1].copy(a),o[2].copy(t),o[3].copy(y),o[4].copy(l),o[5].copy(n),this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'copy',value:function(e){var a=this.planes,t=void 0;for(t=0;6>t;++t)a[t].copy(e.planes[t]);return this}},{key:'setFromMatrix',value:function(e){var a=this.planes,t=e.elements,y=t[0],l=t[1],n=t[2],o=t[3],r=t[4],i=t[5],s=t[6],u=t[7],x=t[8],m=t[9],c=t[10],k=t[11],v=t[12],d=t[13],z=t[14],p=t[15];return a[0].setComponents(o-y,u-r,k-x,p-v).normalize(),a[1].setComponents(o+y,u+r,k+x,p+v).normalize(),a[2].setComponents(o+l,u+i,k+m,p+d).normalize(),a[3].setComponents(o-l,u-i,k-m,p-d).normalize(),a[4].setComponents(o-n,u-s,k-c,p-z).normalize(),a[5].setComponents(o+n,u+s,k+c,p+z).normalize(),this}},{key:'intersectsSphere',value:function(e){var a=this.planes,t=e.center,y=-e.radius,l=!0,n=void 0,o=void 0;for(n=0;6>n;++n)if(o=a[n].distanceToPoint(t),o<y){l=!1;break}return l}},{key:'intersectsBox',value:function(e){var a=this.planes,t=e.min,y=e.max,l=void 0,n=void 0;for(l=0;6>l;++l)if(n=a[l],E.x=0<n.normal.x?y.x:t.x,E.y=0<n.normal.y?y.y:t.y,E.z=0<n.normal.z?y.z:t.z,0>n.distanceToPoint(E))return!1;return!0}},{key:'containsPoint',value:function(e){var a=this.planes,t=!0,y=void 0;for(y=0;6>y;++y)if(0>a[y].distanceToPoint(e)){t=!1;break}return t}}]),e}(),L=new h,Q=new h,O=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h;d(this,e),this.start=a,this.end=t}return z(e,[{key:'set',value:function(e,a){return this.start.copy(e),this.end.copy(a),this}},{key:'copy',value:function(e){return this.start.copy(e.start),this.end.copy(e.end),this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'getCenter',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h;return e.addVectors(this.start,this.end).multiplyScalar(.5)}},{key:'delta',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h;return e.subVectors(this.end,this.start)}},{key:'lengthSquared',value:function(){return this.start.distanceToSquared(this.end)}},{key:'length',value:function(){return this.start.distanceTo(this.end)}},{key:'at',value:function(e,a){return this.delta(a).multiplyScalar(e).add(this.start)}},{key:'closestPointToPointParameter',value:function(e,a){L.subVectors(e,this.start),Q.subVectors(this.end,this.start);var y=Q.dot(Q),l=Q.dot(L),n=a?s(x(l/y,0),1):l/y;return n}},{key:'closestPointToPoint',value:function(e){var a=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:new h,l=this.closestPointToPointParameter(e,a);return this.delta(y).multiplyScalar(l).add(this.start)}},{key:'equals',value:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}]),e}(),D=new h,I=new h,j=new h,c=function(){function e(){d(this,e),this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}return z(e,[{key:'set',value:function(e,a,t,y,l,n,o,r,i,s,u,x,m,c,k,v){var d=this.elements;return d[0]=e,d[4]=a,d[8]=t,d[12]=y,d[1]=l,d[5]=n,d[9]=o,d[13]=r,d[2]=i,d[6]=s,d[10]=u,d[14]=x,d[3]=m,d[7]=c,d[11]=k,d[15]=v,this}},{key:'identity',value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:'copy',value:function(e){var a=e.elements,t=this.elements;return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15],this}},{key:'clone',value:function(){return new this.constructor().fromArray(this.elements)}},{key:'fromArray',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,t=this.elements,y=void 0;for(y=0;16>y;++y)t[y]=e[y+a];return this}},{key:'toArray',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,t=this.elements,y=void 0;for(y=0;16>y;++y)e[y+a]=t[y];return e}},{key:'getMaxScaleOnAxis',value:function(){var e=this.elements,a=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],t=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],y=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return k(x(a,t,y))}},{key:'copyPosition',value:function(e){var a=this.elements,t=e.elements;return a[12]=t[12],a[13]=t[13],a[14]=t[14],this}},{key:'setPosition',value:function(e){var a=this.elements;return a[12]=e.x,a[13]=e.y,a[14]=e.z,this}},{key:'extractBasis',value:function(e,a,t){return e.setFromMatrixColumn(this,0),a.setFromMatrixColumn(this,1),t.setFromMatrixColumn(this,2),this}},{key:'makeBasis',value:function(e,a,t){return this.set(e.x,a.x,t.x,0,e.y,a.y,t.y,0,e.z,a.z,t.z,0,0,0,0,1),this}},{key:'extractRotation',value:function(e){var a=this.elements,t=e.elements,y=1/D.setFromMatrixColumn(e,0).length(),l=1/D.setFromMatrixColumn(e,1).length(),n=1/D.setFromMatrixColumn(e,2).length();return a[0]=t[0]*y,a[1]=t[1]*y,a[2]=t[2]*y,a[3]=0,a[4]=t[4]*l,a[5]=t[5]*l,a[6]=t[6]*l,a[7]=0,a[8]=t[8]*n,a[9]=t[9]*n,a[10]=t[10]*n,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}},{key:'makeRotationFromEuler',value:function(t){var l=this.elements,n=t.x,o=t.y,y=t.z,r=p(n),a=g(n),i=p(o),s=g(o),u=p(y),e=g(y),x=void 0,m=void 0,c=void 0,k=void 0,v=void 0,d=void 0,z=void 0,h=void 0,w=void 0,S=void 0,P=void 0,f=void 0;switch(t.order){case A.XYZ:{x=r*u,m=r*e,c=a*u,k=a*e,l[0]=i*u,l[4]=-i*e,l[8]=s,l[1]=m+c*s,l[5]=x-k*s,l[9]=-a*i,l[2]=k-x*s,l[6]=c+m*s,l[10]=r*i;break}case A.YXZ:{v=i*u,d=i*e,z=s*u,h=s*e,l[0]=v+h*a,l[4]=z*a-d,l[8]=r*s,l[1]=r*e,l[5]=r*u,l[9]=-a,l[2]=d*a-z,l[6]=h+v*a,l[10]=r*i;break}case A.ZXY:{v=i*u,d=i*e,z=s*u,h=s*e,l[0]=v-h*a,l[4]=-r*e,l[8]=z+d*a,l[1]=d+z*a,l[5]=r*u,l[9]=h-v*a,l[2]=-r*s,l[6]=a,l[10]=r*i;break}case A.ZYX:{x=r*u,m=r*e,c=a*u,k=a*e,l[0]=i*u,l[4]=c*s-m,l[8]=x*s+k,l[1]=i*e,l[5]=k*s+x,l[9]=m*s-c,l[2]=-s,l[6]=a*i,l[10]=r*i;break}case A.YZX:{w=r*i,S=r*s,P=a*i,f=a*s,l[0]=i*u,l[4]=f-w*e,l[8]=P*e+S,l[1]=e,l[5]=r*u,l[9]=-a*u,l[2]=-s*u,l[6]=S*e+P,l[10]=w-f*e;break}case A.XZY:{w=r*i,S=r*s,P=a*i,f=a*s,l[0]=i*u,l[4]=-e,l[8]=s*u,l[1]=w*e+f,l[5]=r*u,l[9]=S*e-P,l[2]=P*e-S,l[6]=a*u,l[10]=f*e+w;break}}return l[3]=0,l[7]=0,l[11]=0,l[12]=0,l[13]=0,l[14]=0,l[15]=1,this}},{key:'makeRotationFromQuaternion',value:function(e){return this.compose(D.set(0,0,0),e,I.set(1,1,1))}},{key:'lookAt',value:function(e,a,t){var l=this.elements,n=D,o=I,y=j;return y.subVectors(e,a),0===y.lengthSquared()&&(y.z=1),y.normalize(),n.crossVectors(t,y),0===n.lengthSquared()&&(1===i(t.z)?y.x+=1e-4:y.z+=1e-4,y.normalize(),n.crossVectors(t,y)),n.normalize(),o.crossVectors(y,n),l[0]=n.x,l[4]=o.x,l[8]=y.x,l[1]=n.y,l[5]=o.y,l[9]=y.y,l[2]=n.z,l[6]=o.z,l[10]=y.z,this}},{key:'multiplyMatrices',value:function(e,a){var t=this.elements,y=e.elements,l=a.elements,n=y[0],o=y[4],r=y[8],i=y[12],s=y[1],u=y[5],x=y[9],m=y[13],c=y[2],k=y[6],v=y[10],d=y[14],z=y[3],p=y[7],g=y[11],h=y[15],w=l[0],S=l[4],P=l[8],f=l[12],T=l[1],V=l[5],q=l[9],F=l[13],b=l[2],M=l[6],C=l[10],A=l[14],X=l[3],Y=l[7],Z=l[11],B=l[15];return t[0]=n*w+o*T+r*b+i*X,t[4]=n*S+o*V+r*M+i*Y,t[8]=n*P+o*q+r*C+i*Z,t[12]=n*f+o*F+r*A+i*B,t[1]=s*w+u*T+x*b+m*X,t[5]=s*S+u*V+x*M+m*Y,t[9]=s*P+u*q+x*C+m*Z,t[13]=s*f+u*F+x*A+m*B,t[2]=c*w+k*T+v*b+d*X,t[6]=c*S+k*V+v*M+d*Y,t[10]=c*P+k*q+v*C+d*Z,t[14]=c*f+k*F+v*A+d*B,t[3]=z*w+p*T+g*b+h*X,t[7]=z*S+p*V+g*M+h*Y,t[11]=z*P+p*q+g*C+h*Z,t[15]=z*f+p*F+g*A+h*B,this}},{key:'multiply',value:function(e){return this.multiplyMatrices(this,e)}},{key:'premultiply',value:function(e){return this.multiplyMatrices(e,this)}},{key:'multiplyScalar',value:function(e){var a=this.elements;return a[0]*=e,a[4]*=e,a[8]*=e,a[12]*=e,a[1]*=e,a[5]*=e,a[9]*=e,a[13]*=e,a[2]*=e,a[6]*=e,a[10]*=e,a[14]*=e,a[3]*=e,a[7]*=e,a[11]*=e,a[15]*=e,this}},{key:'determinant',value:function(){var e=this.elements,a=e[0],t=e[4],y=e[8],l=e[12],n=e[1],o=e[5],r=e[9],i=e[13],s=e[2],u=e[6],x=e[10],m=e[14],c=e[3],k=e[7],v=e[11],d=e[15],z=a*o,p=a*r,g=a*i,h=t*n,w=t*r,S=t*i,P=y*n,f=y*o,T=y*i,V=l*n,q=l*o,F=l*r;return c*(F*u-T*u-q*x+S*x+f*m-w*m)+k*(p*m-g*x+V*x-P*m+T*s-F*s)+v*(g*u-z*m-V*u+h*m+q*s-S*s)+d*(-f*s-p*u+z*x+P*u-h*x+w*s)}},{key:'getInverse',value:function(e){var a=this.elements,t=e.elements,y=t[0],l=t[1],n=t[2],o=t[3],r=t[4],i=t[5],s=t[6],u=t[7],x=t[8],m=t[9],c=t[10],k=t[11],v=t[12],d=t[13],z=t[14],p=t[15],g=m*z*u-d*c*u+d*s*k-i*z*k-m*s*p+i*c*p,h=v*c*u-x*z*u-v*s*k+r*z*k+x*s*p-r*c*p,w=x*d*u-v*m*u+v*i*k-r*d*k-x*i*p+r*m*p,S=v*m*s-x*d*s-v*i*c+r*d*c+x*i*z-r*m*z,P=y*g+l*h+n*w+o*S,f=void 0;return 0==P?(console.error('Can\'t invert matrix, determinant is zero',e),this.identity()):(f=1/P,a[0]=g*f,a[1]=(d*c*o-m*z*o-d*n*k+l*z*k+m*n*p-l*c*p)*f,a[2]=(i*z*o-d*s*o+d*n*u-l*z*u-i*n*p+l*s*p)*f,a[3]=(m*s*o-i*c*o-m*n*u+l*c*u+i*n*k-l*s*k)*f,a[4]=h*f,a[5]=(x*z*o-v*c*o+v*n*k-y*z*k-x*n*p+y*c*p)*f,a[6]=(v*s*o-r*z*o-v*n*u+y*z*u+r*n*p-y*s*p)*f,a[7]=(r*c*o-x*s*o+x*n*u-y*c*u-r*n*k+y*s*k)*f,a[8]=w*f,a[9]=(v*m*o-x*d*o-v*l*k+y*d*k+x*l*p-y*m*p)*f,a[10]=(r*d*o-v*i*o+v*l*u-y*d*u-r*l*p+y*i*p)*f,a[11]=(x*i*o-r*m*o-x*l*u+y*m*u+r*l*k-y*i*k)*f,a[12]=S*f,a[13]=(x*d*n-v*m*n+v*l*c-y*d*c-x*l*z+y*m*z)*f,a[14]=(v*i*n-r*d*n-v*l*s+y*d*s+r*l*z-y*i*z)*f,a[15]=(r*m*n-x*i*n+x*l*s-y*m*s-r*l*c+y*i*c)*f),this}},{key:'transpose',value:function(){var e=this.elements,a=void 0;return a=e[1],e[1]=e[4],e[4]=a,a=e[2],e[2]=e[8],e[8]=a,a=e[6],e[6]=e[9],e[9]=a,a=e[3],e[3]=e[12],e[12]=a,a=e[7],e[7]=e[13],e[13]=a,a=e[11],e[11]=e[14],e[14]=a,this}},{key:'scale',value:function(e,a,t){var y=this.elements;return y[0]*=e,y[4]*=a,y[8]*=t,y[1]*=e,y[5]*=a,y[9]*=t,y[2]*=e,y[6]*=a,y[10]*=t,y[3]*=e,y[7]*=a,y[11]*=t,this}},{key:'makeScale',value:function(e,a,t){return this.set(e,0,0,0,0,a,0,0,0,0,t,0,0,0,0,1),this}},{key:'makeTranslation',value:function(e,a,t){return this.set(1,0,0,e,0,1,0,a,0,0,1,t,0,0,0,1),this}},{key:'makeRotationX',value:function(e){var a=p(e),t=g(e);return this.set(1,0,0,0,0,a,-t,0,0,t,a,0,0,0,0,1),this}},{key:'makeRotationY',value:function(e){var a=p(e),t=g(e);return this.set(a,0,t,0,0,1,0,0,-t,0,a,0,0,0,0,1),this}},{key:'makeRotationZ',value:function(e){var a=p(e),t=g(e);return this.set(a,-t,0,0,t,a,0,0,0,0,1,0,0,0,0,1),this}},{key:'makeRotationAxis',value:function(e,a){var l=p(a),n=g(a),o=1-l,t=e.x,r=e.y,y=e.z,i=o*t,s=o*r;return this.set(i*t+l,i*r-n*y,i*y+n*r,0,i*r+n*y,s*r+l,s*y-n*t,0,i*y-n*r,s*y+n*t,o*y*y+l,0,0,0,0,1),this}},{key:'makeShear',value:function(e,a,t){return this.set(1,a,t,0,e,1,t,0,e,a,1,0,0,0,0,1),this}},{key:'compose',value:function(e,a,t){var l=this.elements,n=a.x,o=a.y,y=a.z,r=a.w,i=n+n,s=o+o,u=y+y,x=n*i,m=n*s,c=n*u,k=o*s,v=o*u,d=y*u,z=r*i,p=r*s,g=r*u,h=t.x,w=t.y,S=t.z;return l[0]=(1-(k+d))*h,l[1]=(m+g)*h,l[2]=(c-p)*h,l[3]=0,l[4]=(m-g)*w,l[5]=(1-(x+d))*w,l[6]=(v+z)*w,l[7]=0,l[8]=(c+p)*S,l[9]=(v-z)*S,l[10]=(1-(x+k))*S,l[11]=0,l[12]=e.x,l[13]=e.y,l[14]=e.z,l[15]=1,this}},{key:'decompose',value:function(e,a,t){var y=this.elements,l=y[0],n=y[1],o=y[2],r=y[4],i=y[5],s=y[6],u=y[8],x=y[9],m=y[10],c=this.determinant(),k=D.set(l,n,o).length()*(0>c?-1:1),v=D.set(r,i,s).length(),d=D.set(u,x,m).length(),z=1/k,p=1/v,g=1/d;return e.x=y[12],e.y=y[13],e.z=y[14],y[0]*=z,y[1]*=z,y[2]*=z,y[4]*=p,y[5]*=p,y[6]*=p,y[8]*=g,y[9]*=g,y[10]*=g,a.setFromRotationMatrix(this),y[0]=l,y[1]=n,y[2]=o,y[4]=r,y[5]=i,y[6]=s,y[8]=u,y[9]=x,y[10]=m,t.x=k,t.y=v,t.z=d,this}},{key:'makePerspective',value:function(e,a,t,y,l,n){var o=this.elements;return o[0]=2*l/(a-e),o[4]=0,o[8]=(a+e)/(a-e),o[12]=0,o[1]=0,o[5]=2*l/(t-y),o[9]=(t+y)/(t-y),o[13]=0,o[2]=0,o[6]=0,o[10]=-(n+l)/(n-l),o[14]=-2*n*l/(n-l),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}},{key:'makeOrthographic',value:function(e,a,t,y,l,n){var o=this.elements,r=1/(a-e),i=1/(t-y),s=1/(n-l);return o[0]=2*r,o[4]=0,o[8]=0,o[12]=-((a+e)*r),o[1]=0,o[5]=2*i,o[9]=0,o[13]=-((t+y)*i),o[2]=0,o[6]=0,o[10]=-2*s,o[14]=-((n+l)*s),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}},{key:'equals',value:function(e){var a=this.elements,t=e.elements,y=!0,l=void 0;for(l=0;y&&16>l;++l)a[l]!==t[l]&&(y=!1);return y}}]),e}(),N=[new h,new h,new h,new h],_=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new h,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h;d(this,e),this.origin=a,this.direction=t}return z(e,[{key:'set',value:function(e,a){return this.origin.copy(e),this.direction.copy(a),this}},{key:'copy',value:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'at',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h;return a.copy(this.direction).multiplyScalar(e).add(this.origin)}},{key:'lookAt',value:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this}},{key:'recast',value:function(e){return this.origin.copy(this.at(e,N[0])),this}},{key:'closestPointToPoint',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h,t=a.subVectors(e,this.origin).dot(this.direction);return 0<=t?a.copy(this.direction).multiplyScalar(t).add(this.origin):a.copy(this.origin)}},{key:'distanceSquaredToPoint',value:function(e){var a=N[0].subVectors(e,this.origin).dot(this.direction);return 0>a?this.origin.distanceToSquared(e):N[0].copy(this.direction).multiplyScalar(a).add(this.origin).distanceToSquared(e)}},{key:'distanceToPoint',value:function(e){return k(this.distanceSquaredToPoint(e))}},{key:'distanceToPlane',value:function(e){var a=e.normal.dot(this.direction),y=0===a?0===e.distanceToPoint(this.origin)?0:-1:-(this.origin.dot(e.normal)+e.constant)/a;return 0<=y?y:null}},{key:'distanceSquaredToSegment',value:function(e,a,t,y){var l=N[0].copy(e).add(a).multiplyScalar(.5),n=N[1].copy(a).sub(e).normalize(),o=N[2].copy(this.origin).sub(l),r=.5*e.distanceTo(a),u=-this.direction.dot(n),m=o.dot(this.direction),k=-o.dot(n),v=o.lengthSq(),c=i(1-u*u),d=void 0,z=void 0,p=void 0,g=void 0,h=void 0;return 0<c?(d=u*k-m,z=u*m-k,p=r*c,0<=d?z>=-p?z<=p?(g=1/c,d*=g,z*=g,h=d*(d+u*z+2*m)+z*(u*d+z+2*k)+v):(z=r,d=x(0,-(u*z+m)),h=-d*d+z*(z+2*k)+v):(z=-r,d=x(0,-(u*z+m)),h=-d*d+z*(z+2*k)+v):z<=-p?(d=x(0,-(-u*r+m)),z=0<d?-r:s(x(-r,-k),r),h=-d*d+z*(z+2*k)+v):z<=p?(d=0,z=s(x(-r,-k),r),h=z*(z+2*k)+v):(d=x(0,-(u*r+m)),z=0<d?r:s(x(-r,-k),r),h=-d*d+z*(z+2*k)+v)):(z=0<u?-r:r,d=x(0,-(u*z+m)),h=-d*d+z*(z+2*k)+v),void 0!==t&&t.copy(this.direction).multiplyScalar(d).add(this.origin),void 0!==y&&y.copy(n).multiplyScalar(z).add(l),h}},{key:'intersectSphere',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h,t=N[0].subVectors(e.center,this.origin),y=t.dot(this.direction),l=t.dot(t)-y*y,n=e.radius*e.radius,o=null,r=void 0,i=void 0,s=void 0;return l<=n&&(r=k(n-l),i=y-r,s=y+r,(0<=i||0<=s)&&(o=0>i?this.at(s,a):this.at(i,a))),o}},{key:'intersectsSphere',value:function(e){return this.distanceToPoint(e.center)<=e.radius}},{key:'intersectPlane',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h,y=this.distanceToPlane(e);return null===y?null:this.at(y,a)}},{key:'intersectsPlane',value:function(e){var a=e.distanceToPoint(this.origin);return 0===a||0>e.normal.dot(this.direction)*a}},{key:'intersectBox',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new h,t=this.origin,y=this.direction,l=e.min,n=e.max,o=1/y.x,r=1/y.y,i=1/y.z,s=null,u=void 0,x=void 0,m=void 0,c=void 0,k=void 0,v=void 0;return 0<=o?(u=(l.x-t.x)*o,x=(n.x-t.x)*o):(u=(n.x-t.x)*o,x=(l.x-t.x)*o),0<=r?(m=(l.y-t.y)*r,c=(n.y-t.y)*r):(m=(n.y-t.y)*r,c=(l.y-t.y)*r),u<=c&&m<=x&&((m>u||u!=u)&&(u=m),(c<x||x!=x)&&(x=c),0<=i?(k=(l.z-t.z)*i,v=(n.z-t.z)*i):(k=(n.z-t.z)*i,v=(l.z-t.z)*i),u<=v&&k<=x&&((k>u||u!=u)&&(u=k),(v<x||x!=x)&&(x=v),0<=x&&(s=this.at(0<=u?u:x,a)))),s}},{key:'intersectsBox',value:function(e){return null!==this.intersectBox(e,N[0])}},{key:'intersectTriangle',value:function(e,a,t,y,l){var n=this.direction,o=N[0],r=N[1],i=N[2],s=N[3],u=null,x=void 0,m=void 0,c=void 0,k=void 0,v=void 0;return r.subVectors(a,e),i.subVectors(t,e),s.crossVectors(r,i),x=n.dot(s),0===x||y&&0<x||(0<x?m=1:(m=-1,x=-x),o.subVectors(this.origin,e),c=m*n.dot(i.crossVectors(o,i)),0<=c&&(k=m*n.dot(r.cross(o)),0<=k&&c+k<=x&&(v=-m*o.dot(s),0<=v&&(u=this.at(v/x,l))))),u}},{key:'applyMatrix4',value:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}},{key:'equals',value:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}]),e}(),U=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;d(this,e),this.radius=a,this.phi=t,this.theta=y}return z(e,[{key:'set',value:function(e,a,t){return this.radius=e,this.phi=a,this.theta=t,this}},{key:'copy',value:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'setFromVector3',value:function(e){return this.radius=e.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=n(e.x,e.z),this.phi=u(s(x(e.y/this.radius,-1),1))),this.makeSafe()}},{key:'makeSafe',value:function(){return this.phi=x(1e-6,s(l-1e-6,this.phi)),this}}]),e}(),H=function(){function e(){d(this,e),this.elements=new Float32Array([1,0,0,1,0,1])}return z(e,[{key:'set',value:function(a,t,y,l,n,o){var r=this.elements;return r[0]=a,r[1]=t,r[3]=l,r[2]=y,r[4]=n,r[5]=o,this}},{key:'identity',value:function(){return this.set(1,0,0,1,0,1),this}},{key:'copy',value:function(e){var a=e.elements;return this.set(a[0],a[1],a[2],a[3],a[4],a[5]),this}},{key:'clone',value:function(){return new this.constructor().copy(this)}},{key:'toMatrix3',value:function(e){var a=e.elements;e.set(a[0],a[1],a[2],a[1],a[3],a[4],a[2],a[4],a[5])}},{key:'add',value:function(e){var a=this.elements,t=e.elements;return a[0]+=t[0],a[1]+=t[1],a[3]+=t[3],a[2]+=t[2],a[4]+=t[4],a[5]+=t[5],this}},{key:'norm',value:function(){var a=this.elements,e=a[1]*a[1],t=a[2]*a[2],y=a[4]*a[4];return k(a[0]*a[0]+e+t+e+a[3]*a[3]+y+t+y+a[5]*a[5])}},{key:'off',value:function(){var a=this.elements;return k(2*(a[1]*a[1]+a[2]*a[2]+a[4]*a[4]))}},{key:'applyToVector3',value:function(a){var t=a.x,l=a.y,y=a.z,n=this.elements;return a.x=n[0]*t+n[1]*l+n[2]*y,a.y=n[1]*t+n[3]*l+n[4]*y,a.z=n[2]*t+n[4]*l+n[5]*y,a}},{key:'equals',value:function(e){var a=this.elements,t=e.elements,y=!0,l=void 0;for(l=0;y&&6>l;++l)a[l]!==t[l]&&(y=!1);return y}}],[{key:'calculateIndex',value:function(e,a){return 3-(3-e)*(2-e)/2+a}}]),e}(),G=function(){function e(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,y=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,l=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0;d(this,e),this.x=a,this.y=t,this.z=y,this.w=l}return z(e,[{key:'set',value:function(e,a,t,y){return this.x=e,this.y=a,this.z=t,this.w=y,this}},{key:'copy',value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}},{key:'clone',value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:'fromArray',value:function(e){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[a],this.y=e[a+1],this.z=e[a+2],this.w=e[a+3],this}},{key:'toArray',value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return e[a]=this.x,e[a+1]=this.y,e[a+2]=this.z,e[a+3]=this.w,e}},{key:'setAxisAngleFromQuaternion',value:function(e){this.w=2*u(e.w);var a=k(1-e.w*e.w);return 1e-4>a?(this.x=1,this.y=0,this.z=0):(this.x=e.x/a,this.y=e.y/a,this.z=e.z/a),this}},{key:'setAxisAngleFromRotationMatrix',value:function(e){var a=.01,t=.1,n=e.elements,o=n[0],r=n[4],m=n[8],c=n[1],v=n[5],d=n[9],p=n[2],g=n[6],h=n[10],w=void 0,S=void 0,P=void 0,f=void 0,T=void 0,V=void 0,q=void 0,F=void 0,b=void 0,M=void 0,C=void 0;return i(r-c)<a&&i(m-p)<a&&i(d-g)<a?i(r+c)<t&&i(m+p)<t&&i(d+g)<t&&i(o+v+h-3)<t?this.set(1,0,0,0):(w=l,T=(o+1)/2,V=(v+1)/2,q=(h+1)/2,F=(r+c)/4,b=(m+p)/4,M=(d+g)/4,T>V&&T>q?T<a?(S=0,P=.707106781,f=.707106781):(S=k(T),P=F/S,f=b/S):V>q?V<a?(S=.707106781,P=0,f=.707106781):(P=k(V),S=F/P,f=M/P):q<a?(S=.707106781,P=.707106781,f=0):(f=k(q),S=b/f,P=M/f),this.set(S,P,f,w)):(C=k((g-d)*(g-d)+(m-p)*(m-p)+(c-r)*(c-r)),.001>i(C)&&(C=1),this.x=(g-d)/C,this.y=(m-p)/C,this.z=(c-r)/C,this.w=u((o+v+h-1)/2)),this}},{key:'add',value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}},{key:'addScalar',value:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}},{key:'addVectors',value:function(e,a){return this.x=e.x+a.x,this.y=e.y+a.y,this.z=e.z+a.z,this.w=e.w+a.w,this}},{key:'addScaledVector',value:function(e,a){return this.x+=e.x*a,this.y+=e.y*a,this.z+=e.z*a,this.w+=e.w*a,this}},{key:'sub',value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}},{key:'subScalar',value:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}},{key:'subVectors',value:function(e,a){return this.x=e.x-a.x,this.y=e.y-a.y,this.z=e.z-a.z,this.w=e.w-a.w,this}},{key:'multiply',value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}},{key:'multiplyScalar',value:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}},{key:'multiplyVectors',value:function(e,a){return this.x=e.x*a.x,this.y=e.y*a.y,this.z=e.z*a.z,this.w=e.w*a.w,this}},{key:'divide',value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}},{key:'divideScalar',value:function(e){return this.x/=e,this.y/=e,this.z/=e,this.w/=e,this}},{key:'applyMatrix4',value:function(a){var t=this.x,l=this.y,y=this.z,n=this.w,o=a.elements;return this.x=o[0]*t+o[4]*l+o[8]*y+o[12]*n,this.y=o[1]*t+o[5]*l+o[9]*y+o[13]*n,this.z=o[2]*t+o[6]*l+o[10]*y+o[14]*n,this.w=o[3]*t+o[7]*l+o[11]*y+o[15]*n,this}},{key:'negate',value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:'dot',value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:'manhattanLength',value:function(){return i(this.x)+i(this.y)+i(this.z)+i(this.w)}},{key:'lengthSquared',value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:'length',value:function(){return k(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:'manhattanDistanceTo',value:function(e){return i(this.x-e.x)+i(this.y-e.y)+i(this.z-e.z)+i(this.w-e.w)}},{key:'distanceToSquared',value:function(e){var a=this.x-e.x,t=this.y-e.y,y=this.z-e.z,l=this.w-e.w;return a*a+t*t+y*y+l*l}},{key:'distanceTo',value:function(e){return k(this.distanceToSquared(e))}},{key:'normalize',value:function(){return this.divideScalar(this.length())}},{key:'setLength',value:function(e){return this.normalize().multiplyScalar(e)}},{key:'min',value:function(e){return this.x=s(this.x,e.x),this.y=s(this.y,e.y),this.z=s(this.z,e.z),this.w=s(this.w,e.w),this}},{key:'max',value:function(e){return this.x=x(this.x,e.x),this.y=x(this.y,e.y),this.z=x(this.z,e.z),this.w=x(this.w,e.w),this}},{key:'clamp',value:function(e,a){return this.x=x(e.x,s(a.x,this.x)),this.y=x(e.y,s(a.y,this.y)),this.z=x(e.z,s(a.z,this.z)),this.w=x(e.w,s(a.w,this.w)),this}},{key:'floor',value:function(){return this.x=r(this.x),this.y=r(this.y),this.z=r(this.z),this.w=r(this.w),this}},{key:'ceil',value:function(){return this.x=o(this.x),this.y=o(this.y),this.z=o(this.z),this.w=o(this.w),this}},{key:'round',value:function(){return this.x=y(this.x),this.y=y(this.y),this.z=y(this.z),this.w=y(this.w),this}},{key:'lerp',value:function(e,a){return this.x+=(e.x-this.x)*a,this.y+=(e.y-this.y)*a,this.z+=(e.z-this.z)*a,this.w+=(e.w-this.w)*a,this}},{key:'lerpVectors',value:function(e,a,t){return this.subVectors(a,e).multiplyScalar(t).add(e)}},{key:'equals',value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}}]),e}();e.Box2=F,e.Box3=v,e.Cylindrical=M,e.Euler=q,e.Frustum=R,e.Line3=O,e.Matrix3=C,e.Matrix4=c,e.Plane=b,e.Quaternion=Y,e.RotationOrder=A,e.Ray=_,e.Sphere=f,e.Spherical=U,e.SymmetricMatrix3=H,e.Vector2=T,e.Vector3=h,e.Vector4=G,Object.defineProperty(e,'__esModule',{value:!0})});
